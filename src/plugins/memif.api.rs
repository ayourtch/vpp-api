/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfStatusFlags { 
	 IF_STATUS_API_FLAG_ADMIN_UP=1, 
	 IF_STATUS_API_FLAG_LINK_UP=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MtuProto { 
	 MTU_PROTO_API_L3=0, 
	 MTU_PROTO_API_IP4=1, 
	 MTU_PROTO_API_IP6=2, 
	 MTU_PROTO_API_MPLS=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum LinkDuplex { 
	 LINK_DUPLEX_API_UNKNOWN=0, 
	 LINK_DUPLEX_API_HALF=1, 
	 LINK_DUPLEX_API_FULL=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SubIfFlags { 
	 SUB_IF_API_FLAG_NO_TAGS=1, 
	 SUB_IF_API_FLAG_ONE_TAG=2, 
	 SUB_IF_API_FLAG_TWO_TAGS=4, 
	 SUB_IF_API_FLAG_DOT1AD=8, 
	 SUB_IF_API_FLAG_EXACT_MATCH=16, 
	 SUB_IF_API_FLAG_DEFAULT=32, 
	 SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY=64, 
	 SUB_IF_API_FLAG_INNER_VLAN_ID_ANY=128, 
	 SUB_IF_API_FLAG_MASK_VNET=254, 
	 SUB_IF_API_FLAG_DOT1AH=256, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum RxMode { 
	 RX_MODE_API_UNKNOWN=0, 
	 RX_MODE_API_POLLING=1, 
	 RX_MODE_API_INTERRUPT=2, 
	 RX_MODE_API_ADAPTIVE=3, 
	 RX_MODE_API_DEFAULT=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfType { 
	 IF_API_TYPE_HARDWARE=0, 
	 IF_API_TYPE_SUB=1, 
	 IF_API_TYPE_P2P=2, 
	 IF_API_TYPE_PIPE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Direction { 
	 RX=0, 
	 TX=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MemifRole { 
	 MEMIF_ROLE_API_MASTER=0, 
	 MEMIF_ROLE_API_SLAVE=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MemifMode { 
	 MEMIF_MODE_API_ETHERNET=0, 
	 MEMIF_MODE_API_IP=1, 
	 MEMIF_MODE_API_PUNT_INJECT=2, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifSocketFilenameAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub socket_id : u32, 
	pub socket_filename : FixedSizeString<U108>, 
} 
impl MemifSocketFilenameAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_socket_filename_add_del_a2ce1a10") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifSocketFilenameAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl MemifSocketFilenameAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_socket_filename_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifCreate { 
	pub client_index : u32, 
	pub context : u32, 
	pub role : MemifRole, 
	pub mode : MemifMode, 
	pub rx_queues : u8, 
	pub tx_queues : u8, 
	pub id : u32, 
	pub socket_id : u32, 
	pub ring_size : u32, 
	pub buffer_size : u16, 
	pub no_zero_copy : bool, 
	pub hw_addr : MacAddress, 
	pub secret : FixedSizeString<U24>, 
} 
impl MemifCreate { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_create_b1b25061") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifCreateReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl MemifCreateReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_create_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifDelete { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl MemifDelete { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_delete_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifDeleteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl MemifDeleteReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_delete_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifSocketFilenameDetails { 
	pub context : u32, 
	pub socket_id : u32, 
	pub socket_filename : FixedSizeString<U108>, 
} 
impl MemifSocketFilenameDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_socket_filename_details_7ff326f7") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifSocketFilenameDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl MemifSocketFilenameDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_socket_filename_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub hw_addr : MacAddress, 
	pub id : u32, 
	pub role : MemifRole, 
	pub mode : MemifMode, 
	pub zero_copy : bool, 
	pub socket_id : u32, 
	pub ring_size : u32, 
	pub buffer_size : u16, 
	pub flags : IfStatusFlags, 
	pub if_name : FixedSizeString<U64>, 
} 
impl MemifDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_details_d0382c4c") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MemifDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl MemifDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("memif_dump_51077d14") 
	 } 
} 
