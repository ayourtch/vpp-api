/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Address { 
	pub af : AddressFamily, 
	pub un : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Prefix { 
	pub address : Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4AddressAndMask { 
	pub addr : Ip4Address, 
	pub mask : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6AddressAndMask { 
	pub addr : Ip6Address, 
	pub mask : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Mprefix { 
	pub af : AddressFamily, 
	pub grp_address_length : u16, 
	pub grp_address : AddressUnion, 
	pub src_address : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6Prefix { 
	pub address : Ip6Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4Prefix { 
	pub address : Ip4Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PrefixMatcher { 
	pub le : u8, 
	pub ge : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
union address_union { 
	 ip4 : Ip4Address, 
	 ip6 : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum AddressFamily { 
	 ADDRESS_IP4=0, 
	 ADDRESS_IP6=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpFeatureLocation { 
	 IP_API_FEATURE_INPUT=0, 
	 IP_API_FEATURE_OUTPUT=1, 
	 IP_API_FEATURE_LOCAL=2, 
	 IP_API_FEATURE_PUNT=3, 
	 IP_API_FEATURE_DROP=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpEcn { 
	 IP_API_ECN_NONE=0, 
	 IP_API_ECN_ECT0=1, 
	 IP_API_ECN_ECT1=2, 
	 IP_API_ECN_CE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpDscp { 
	 IP_API_DSCP_CS0=0, 
	 IP_API_DSCP_CS1=8, 
	 IP_API_DSCP_AF11=10, 
	 IP_API_DSCP_AF12=12, 
	 IP_API_DSCP_AF13=14, 
	 IP_API_DSCP_CS2=16, 
	 IP_API_DSCP_AF21=18, 
	 IP_API_DSCP_AF22=20, 
	 IP_API_DSCP_AF23=22, 
	 IP_API_DSCP_CS3=24, 
	 IP_API_DSCP_AF31=26, 
	 IP_API_DSCP_AF32=28, 
	 IP_API_DSCP_AF33=30, 
	 IP_API_DSCP_CS4=32, 
	 IP_API_DSCP_AF41=34, 
	 IP_API_DSCP_AF42=36, 
	 IP_API_DSCP_AF43=38, 
	 IP_API_DSCP_CS5=40, 
	 IP_API_DSCP_EF=46, 
	 IP_API_DSCP_CS6=48, 
	 IP_API_DSCP_CS7=50, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpProto { 
	 IP_API_PROTO_HOPOPT=0, 
	 IP_API_PROTO_ICMP=1, 
	 IP_API_PROTO_IGMP=2, 
	 IP_API_PROTO_TCP=6, 
	 IP_API_PROTO_UDP=17, 
	 IP_API_PROTO_GRE=47, 
	 IP_API_PROTO_ESP=50, 
	 IP_API_PROTO_AH=51, 
	 IP_API_PROTO_ICMP6=58, 
	 IP_API_PROTO_EIGRP=88, 
	 IP_API_PROTO_OSPF=89, 
	 IP_API_PROTO_SCTP=132, 
	 IP_API_PROTO_RESERVED=255, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SyslogSeverity { 
	 SYSLOG_API_SEVERITY_EMERG=0, 
	 SYSLOG_API_SEVERITY_ALERT=1, 
	 SYSLOG_API_SEVERITY_CRIT=2, 
	 SYSLOG_API_SEVERITY_ERR=3, 
	 SYSLOG_API_SEVERITY_WARN=4, 
	 SYSLOG_API_SEVERITY_NOTICE=5, 
	 SYSLOG_API_SEVERITY_INFO=6, 
	 SYSLOG_API_SEVERITY_DBG=7, 
} 
pub type Ip4Address=[u8;4]; 
pub type Ip6Address=[u8;16]; 
pub type AddressWithPrefix=Prefix; 
pub type Ip4AddressWithPrefix=Ip4Prefix; 
pub type Ip6AddressWithPrefix=Ip6Prefix; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogSetSender { 
	pub client_index : u32, 
	pub context : u32, 
	pub src_address : Ip4Address, 
	pub collector_address : Ip4Address, 
	pub collector_port : u16, 
	pub vrf_id : u32, 
	pub max_msg_size : u32, 
} 
impl SyslogSetSender { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_set_sender_bb641285") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogSetSenderReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SyslogSetSenderReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_set_sender_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogGetSender { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl SyslogGetSender { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_get_sender_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogGetSenderReply { 
	pub context : u32, 
	pub retval : i32, 
	pub src_address : Ip4Address, 
	pub collector_address : Ip4Address, 
	pub collector_port : u16, 
	pub vrf_id : u32, 
	pub max_msg_size : u32, 
} 
impl SyslogGetSenderReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_get_sender_reply_d3da60ac") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogSetFilter { 
	pub client_index : u32, 
	pub context : u32, 
	pub severity : SyslogSeverity, 
} 
impl SyslogSetFilter { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_set_filter_571348c3") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogSetFilterReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SyslogSetFilterReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_set_filter_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogGetFilter { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl SyslogGetFilter { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_get_filter_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SyslogGetFilterReply { 
	pub context : u32, 
	pub retval : i32, 
	pub severity : SyslogSeverity, 
} 
impl SyslogGetFilterReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("syslog_get_filter_reply_eb1833f8") 
	 } 
} 
