/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Tunnel { 
	pub instance : u32, 
	pub src : Address, 
	pub dst : Address, 
	pub sw_if_index : InterfaceIndex, 
	pub table_id : u32, 
	pub encap_decap_flags : TunnelEncapDecapFlags, 
	pub mode : TunnelMode, 
	pub flags : TunnelFlags, 
	pub dscp : IpDscp, 
	pub hop_limit : u8, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum TunnelEncapDecapFlags { 
	 TUNNEL_API_ENCAP_DECAP_FLAG_NONE=0, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_ENCAP_COPY_DF=1, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_ENCAP_SET_DF=2, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_ENCAP_COPY_DSCP=4, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_ENCAP_COPY_ECN=8, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_DECAP_COPY_ECN=16, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_ENCAP_INNER_HASH=32, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_ENCAP_COPY_HOP_LIMIT=64, 
	 TUNNEL_API_ENCAP_DECAP_FLAG_ENCAP_COPY_FLOW_LABEL=128, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum TunnelMode { 
	 TUNNEL_API_MODE_P2P=0, 
	 TUNNEL_API_MODE_MP=1, 
} 
