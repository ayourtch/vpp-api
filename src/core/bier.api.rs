/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Address { 
	pub af : AddressFamily, 
	pub un : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Prefix { 
	pub address : Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4AddressAndMask { 
	pub addr : Ip4Address, 
	pub mask : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6AddressAndMask { 
	pub addr : Ip6Address, 
	pub mask : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Mprefix { 
	pub af : AddressFamily, 
	pub grp_address_length : u16, 
	pub grp_address : AddressUnion, 
	pub src_address : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6Prefix { 
	pub address : Ip6Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4Prefix { 
	pub address : Ip4Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PrefixMatcher { 
	pub le : u8, 
	pub ge : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibMplsLabel { 
	pub is_uniform : u8, 
	pub label : u32, 
	pub ttl : u8, 
	pub exp : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibPathNh { 
	pub address : AddressUnion, 
	pub via_label : u32, 
	pub obj_id : u32, 
	pub classify_table_index : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibPath { 
	pub sw_if_index : u32, 
	pub table_id : u32, 
	pub rpf_id : u32, 
	pub weight : u8, 
	pub preference : u8, 
	pub typ : FibPathType, 
	pub flags : FibPathFlags, 
	pub proto : FibPathNhProto, 
	pub nh : FibPathNh, 
	pub n_labels : u8, 
	pub label_stack : FibMplsLabel, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierTableId { 
	pub bt_set : u8, 
	pub bt_sub_domain : u8, 
	pub bt_hdr_len_id : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierRoute { 
	pub br_bp : u32, 
	pub br_tbl_id : BierTableId, 
	pub br_n_paths : u8, 
	pub br_paths : FibPath, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
union address_union { 
	 ip4 : Ip4Address, 
	 ip6 : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum AddressFamily { 
	 ADDRESS_IP4=0, 
	 ADDRESS_IP6=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpFeatureLocation { 
	 IP_API_FEATURE_INPUT=0, 
	 IP_API_FEATURE_OUTPUT=1, 
	 IP_API_FEATURE_LOCAL=2, 
	 IP_API_FEATURE_PUNT=3, 
	 IP_API_FEATURE_DROP=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpEcn { 
	 IP_API_ECN_NONE=0, 
	 IP_API_ECN_ECT0=1, 
	 IP_API_ECN_ECT1=2, 
	 IP_API_ECN_CE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpDscp { 
	 IP_API_DSCP_CS0=0, 
	 IP_API_DSCP_CS1=8, 
	 IP_API_DSCP_AF11=10, 
	 IP_API_DSCP_AF12=12, 
	 IP_API_DSCP_AF13=14, 
	 IP_API_DSCP_CS2=16, 
	 IP_API_DSCP_AF21=18, 
	 IP_API_DSCP_AF22=20, 
	 IP_API_DSCP_AF23=22, 
	 IP_API_DSCP_CS3=24, 
	 IP_API_DSCP_AF31=26, 
	 IP_API_DSCP_AF32=28, 
	 IP_API_DSCP_AF33=30, 
	 IP_API_DSCP_CS4=32, 
	 IP_API_DSCP_AF41=34, 
	 IP_API_DSCP_AF42=36, 
	 IP_API_DSCP_AF43=38, 
	 IP_API_DSCP_CS5=40, 
	 IP_API_DSCP_EF=46, 
	 IP_API_DSCP_CS6=48, 
	 IP_API_DSCP_CS7=50, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpProto { 
	 IP_API_PROTO_HOPOPT=0, 
	 IP_API_PROTO_ICMP=1, 
	 IP_API_PROTO_IGMP=2, 
	 IP_API_PROTO_TCP=6, 
	 IP_API_PROTO_UDP=17, 
	 IP_API_PROTO_GRE=47, 
	 IP_API_PROTO_ESP=50, 
	 IP_API_PROTO_AH=51, 
	 IP_API_PROTO_ICMP6=58, 
	 IP_API_PROTO_EIGRP=88, 
	 IP_API_PROTO_OSPF=89, 
	 IP_API_PROTO_SCTP=132, 
	 IP_API_PROTO_RESERVED=255, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathNhProto { 
	 FIB_API_PATH_NH_PROTO_IP4=0, 
	 FIB_API_PATH_NH_PROTO_IP6=1, 
	 FIB_API_PATH_NH_PROTO_MPLS=2, 
	 FIB_API_PATH_NH_PROTO_ETHERNET=3, 
	 FIB_API_PATH_NH_PROTO_BIER=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathFlags { 
	 FIB_API_PATH_FLAG_NONE=0, 
	 FIB_API_PATH_FLAG_RESOLVE_VIA_ATTACHED=1, 
	 FIB_API_PATH_FLAG_RESOLVE_VIA_HOST=2, 
	 FIB_API_PATH_FLAG_POP_PW_CW=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathType { 
	 FIB_API_PATH_TYPE_NORMAL=0, 
	 FIB_API_PATH_TYPE_LOCAL=1, 
	 FIB_API_PATH_TYPE_DROP=2, 
	 FIB_API_PATH_TYPE_UDP_ENCAP=3, 
	 FIB_API_PATH_TYPE_BIER_IMP=4, 
	 FIB_API_PATH_TYPE_ICMP_UNREACH=5, 
	 FIB_API_PATH_TYPE_ICMP_PROHIBIT=6, 
	 FIB_API_PATH_TYPE_SOURCE_LOOKUP=7, 
	 FIB_API_PATH_TYPE_DVR=8, 
	 FIB_API_PATH_TYPE_INTERFACE_RX=9, 
	 FIB_API_PATH_TYPE_CLASSIFY=10, 
} 
pub type Ip4Address=[u8;4]; 
pub type Ip6Address=[u8;16]; 
pub type AddressWithPrefix=Prefix; 
pub type Ip4AddressWithPrefix=Ip4Prefix; 
pub type Ip6AddressWithPrefix=Ip6Prefix; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierTableAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub bt_tbl_id : BierTableId, 
	pub bt_label : u32, 
	pub bt_is_add : bool, 
} 
impl BierTableAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_table_add_del_35e59209") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierTableAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BierTableAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_table_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierTableDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl BierTableDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_table_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierTableDetails { 
	pub context : u32, 
	pub bt_label : u32, 
	pub bt_tbl_id : BierTableId, 
} 
impl BierTableDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_table_details_fc44a9dd") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierRouteAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub br_is_add : bool, 
	pub br_is_replace : bool, 
	pub br_route : BierRoute, 
} 
impl BierRouteAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_route_add_del_f29edca0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierRouteAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BierRouteAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_route_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierRouteDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub br_tbl_id : BierTableId, 
} 
impl BierRouteDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_route_dump_38339846") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierRouteDetails { 
	pub context : u32, 
	pub br_route : BierRoute, 
} 
impl BierRouteDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_route_details_39ee6a56") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierImpAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub bi_tbl_id : BierTableId, 
	pub bi_src : u16, 
	pub bi_n_bytes : u8, 
	pub bi_bytes : u8, 
} 
impl BierImpAdd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_imp_add_3856dc3d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierImpAddReply { 
	pub context : u32, 
	pub retval : i32, 
	pub bi_index : u32, 
} 
impl BierImpAddReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_imp_add_reply_d49c5793") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierImpDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub bi_index : u32, 
} 
impl BierImpDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_imp_del_7d45edf6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierImpDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BierImpDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_imp_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierImpDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl BierImpDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_imp_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierImpDetails { 
	pub context : u32, 
	pub bi_tbl_id : BierTableId, 
	pub bi_src : u16, 
	pub bi_n_bytes : u8, 
	pub bi_bytes : u8, 
} 
impl BierImpDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_imp_details_b76192df") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispTableAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub bdt_tbl_id : u32, 
	pub bdt_is_add : bool, 
} 
impl BierDispTableAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_table_add_del_889657ac") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispTableAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BierDispTableAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_table_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispTableDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl BierDispTableDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_table_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispTableDetails { 
	pub context : u32, 
	pub bdt_tbl_id : u32, 
} 
impl BierDispTableDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_table_details_d27942c0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispEntryAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub bde_bp : u16, 
	pub bde_tbl_id : u32, 
	pub bde_is_add : bool, 
	pub bde_payload_proto : u8, 
	pub bde_n_paths : u8, 
	pub bde_paths : FibPath, 
} 
impl BierDispEntryAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_entry_add_del_648323eb") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispEntryAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BierDispEntryAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_entry_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispEntryDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub bde_tbl_id : u32, 
} 
impl BierDispEntryDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_entry_dump_b5fa54ad") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BierDispEntryDetails { 
	pub context : u32, 
	pub bde_bp : u16, 
	pub bde_tbl_id : u32, 
	pub bde_is_add : bool, 
	pub bde_payload_proto : u8, 
	pub bde_n_paths : u8, 
	pub bde_paths : FibPath, 
} 
impl BierDispEntryDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bier_disp_entry_details_e5b039a9") 
	 } 
} 
