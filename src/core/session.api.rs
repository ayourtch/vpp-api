/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Address { 
	pub af : AddressFamily, 
	pub un : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Prefix { 
	pub address : Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4AddressAndMask { 
	pub addr : Ip4Address, 
	pub mask : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6AddressAndMask { 
	pub addr : Ip6Address, 
	pub mask : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Mprefix { 
	pub af : AddressFamily, 
	pub grp_address_length : u16, 
	pub grp_address : AddressUnion, 
	pub src_address : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6Prefix { 
	pub address : Ip6Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4Prefix { 
	pub address : Ip4Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PrefixMatcher { 
	pub le : u8, 
	pub ge : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
union address_union { 
	 ip4 : Ip4Address, 
	 ip6 : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfStatusFlags { 
	 IF_STATUS_API_FLAG_ADMIN_UP=1, 
	 IF_STATUS_API_FLAG_LINK_UP=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MtuProto { 
	 MTU_PROTO_API_L3=0, 
	 MTU_PROTO_API_IP4=1, 
	 MTU_PROTO_API_IP6=2, 
	 MTU_PROTO_API_MPLS=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum LinkDuplex { 
	 LINK_DUPLEX_API_UNKNOWN=0, 
	 LINK_DUPLEX_API_HALF=1, 
	 LINK_DUPLEX_API_FULL=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SubIfFlags { 
	 SUB_IF_API_FLAG_NO_TAGS=1, 
	 SUB_IF_API_FLAG_ONE_TAG=2, 
	 SUB_IF_API_FLAG_TWO_TAGS=4, 
	 SUB_IF_API_FLAG_DOT1AD=8, 
	 SUB_IF_API_FLAG_EXACT_MATCH=16, 
	 SUB_IF_API_FLAG_DEFAULT=32, 
	 SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY=64, 
	 SUB_IF_API_FLAG_INNER_VLAN_ID_ANY=128, 
	 SUB_IF_API_FLAG_MASK_VNET=254, 
	 SUB_IF_API_FLAG_DOT1AH=256, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum RxMode { 
	 RX_MODE_API_UNKNOWN=0, 
	 RX_MODE_API_POLLING=1, 
	 RX_MODE_API_INTERRUPT=2, 
	 RX_MODE_API_ADAPTIVE=3, 
	 RX_MODE_API_DEFAULT=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfType { 
	 IF_API_TYPE_HARDWARE=0, 
	 IF_API_TYPE_SUB=1, 
	 IF_API_TYPE_P2P=2, 
	 IF_API_TYPE_PIPE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Direction { 
	 RX=0, 
	 TX=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum AddressFamily { 
	 ADDRESS_IP4=0, 
	 ADDRESS_IP6=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpFeatureLocation { 
	 IP_API_FEATURE_INPUT=0, 
	 IP_API_FEATURE_OUTPUT=1, 
	 IP_API_FEATURE_LOCAL=2, 
	 IP_API_FEATURE_PUNT=3, 
	 IP_API_FEATURE_DROP=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpEcn { 
	 IP_API_ECN_NONE=0, 
	 IP_API_ECN_ECT0=1, 
	 IP_API_ECN_ECT1=2, 
	 IP_API_ECN_CE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpDscp { 
	 IP_API_DSCP_CS0=0, 
	 IP_API_DSCP_CS1=8, 
	 IP_API_DSCP_AF11=10, 
	 IP_API_DSCP_AF12=12, 
	 IP_API_DSCP_AF13=14, 
	 IP_API_DSCP_CS2=16, 
	 IP_API_DSCP_AF21=18, 
	 IP_API_DSCP_AF22=20, 
	 IP_API_DSCP_AF23=22, 
	 IP_API_DSCP_CS3=24, 
	 IP_API_DSCP_AF31=26, 
	 IP_API_DSCP_AF32=28, 
	 IP_API_DSCP_AF33=30, 
	 IP_API_DSCP_CS4=32, 
	 IP_API_DSCP_AF41=34, 
	 IP_API_DSCP_AF42=36, 
	 IP_API_DSCP_AF43=38, 
	 IP_API_DSCP_CS5=40, 
	 IP_API_DSCP_EF=46, 
	 IP_API_DSCP_CS6=48, 
	 IP_API_DSCP_CS7=50, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpProto { 
	 IP_API_PROTO_HOPOPT=0, 
	 IP_API_PROTO_ICMP=1, 
	 IP_API_PROTO_IGMP=2, 
	 IP_API_PROTO_TCP=6, 
	 IP_API_PROTO_UDP=17, 
	 IP_API_PROTO_GRE=47, 
	 IP_API_PROTO_ESP=50, 
	 IP_API_PROTO_AH=51, 
	 IP_API_PROTO_ICMP6=58, 
	 IP_API_PROTO_EIGRP=88, 
	 IP_API_PROTO_OSPF=89, 
	 IP_API_PROTO_SCTP=132, 
	 IP_API_PROTO_RESERVED=255, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum TransportProto { 
	 TRANSPORT_PROTO_API_TCP=1, 
	 TRANSPORT_PROTO_API_UDP=2, 
	 TRANSPORT_PROTO_API_NONE=3, 
	 TRANSPORT_PROTO_API_TLS=4, 
	 TRANSPORT_PROTO_API_QUIC=5, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SessionRuleScope { 
	 SESSION_RULE_SCOPE_API_GLOBAL=0, 
	 SESSION_RULE_SCOPE_API_LOCAL=1, 
	 SESSION_RULE_SCOPE_API_BOTH=2, 
} 
pub type InterfaceIndex=u32; 
pub type Ip4Address=[u8;4]; 
pub type Ip6Address=[u8;16]; 
pub type AddressWithPrefix=Prefix; 
pub type Ip4AddressWithPrefix=Ip4Prefix; 
pub type Ip6AddressWithPrefix=Ip6Prefix; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppAttach { 
	pub client_index : u32, 
	pub context : u32, 
	pub options : u64, 
	pub namespace_id : VariableSizeString, 
} 
impl AppAttach { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_attach_5f4a260d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppAttachReply { 
	pub context : u32, 
	pub retval : i32, 
	pub app_mq : u64, 
	pub vpp_ctrl_mq : u64, 
	pub vpp_ctrl_mq_thread : u8, 
	pub app_index : u32, 
	pub n_fds : u8, 
	pub fd_flags : u8, 
	pub segment_size : u32, 
	pub segment_handle : u64, 
	pub segment_name : VariableSizeString, 
} 
impl AppAttachReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_attach_reply_5c89c3b0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ApplicationDetach { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl ApplicationDetach { 
	 pub fn get_message_id() -> String { 
	 	 String::from("application_detach_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ApplicationDetachReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl ApplicationDetachReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("application_detach_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppAddCertKeyPair { 
	pub client_index : u32, 
	pub context : u32, 
	pub cert_len : u16, 
	pub certkey_len : u16, 
	pub certkey : u8, 
} 
impl AppAddCertKeyPair { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_add_cert_key_pair_02eb8016") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppAddCertKeyPairReply { 
	pub context : u32, 
	pub retval : i32, 
	pub index : u32, 
} 
impl AppAddCertKeyPairReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_add_cert_key_pair_reply_b42958d0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppDelCertKeyPair { 
	pub client_index : u32, 
	pub context : u32, 
	pub index : u32, 
} 
impl AppDelCertKeyPair { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_del_cert_key_pair_8ac76db6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppDelCertKeyPairReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl AppDelCertKeyPairReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_del_cert_key_pair_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ApplicationTlsCertAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub app_index : u32, 
	pub cert_len : u16, 
	pub cert : u8, 
} 
impl ApplicationTlsCertAdd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("application_tls_cert_add_3f5cfe45") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ApplicationTlsCertAddReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl ApplicationTlsCertAddReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("application_tls_cert_add_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ApplicationTlsKeyAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub app_index : u32, 
	pub key_len : u16, 
	pub key : u8, 
} 
impl ApplicationTlsKeyAdd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("application_tls_key_add_5eaf70cd") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ApplicationTlsKeyAddReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl ApplicationTlsKeyAddReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("application_tls_key_add_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppWorkerAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub app_index : u32, 
	pub wrk_index : u32, 
	pub is_add : bool, 
} 
impl AppWorkerAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_worker_add_del_753253dc") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppWorkerAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub wrk_index : u32, 
	pub app_event_queue_address : u64, 
	pub n_fds : u8, 
	pub fd_flags : u8, 
	pub segment_handle : u64, 
	pub is_add : bool, 
	pub segment_name : VariableSizeString, 
} 
impl AppWorkerAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_worker_add_del_reply_5735ffe7") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SessionEnableDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_enable : bool, 
} 
impl SessionEnableDisable { 
	 pub fn get_message_id() -> String { 
	 	 String::from("session_enable_disable_c264d7bf") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SessionEnableDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SessionEnableDisableReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("session_enable_disable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppNamespaceAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub secret : u64, 
	pub sw_if_index : InterfaceIndex, 
	pub ip4_fib_id : u32, 
	pub ip6_fib_id : u32, 
	pub namespace_id : VariableSizeString, 
} 
impl AppNamespaceAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_namespace_add_del_6306aecb") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AppNamespaceAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub appns_index : u32, 
} 
impl AppNamespaceAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("app_namespace_add_del_reply_85137120") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SessionRuleAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub transport_proto : TransportProto, 
	pub lcl : Prefix, 
	pub rmt : Prefix, 
	pub lcl_port : u16, 
	pub rmt_port : u16, 
	pub action_index : u32, 
	pub is_add : bool, 
	pub appns_index : u32, 
	pub scope : SessionRuleScope, 
	pub tag : FixedSizeString<U64>, 
} 
impl SessionRuleAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("session_rule_add_del_e31f9443") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SessionRuleAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SessionRuleAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("session_rule_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SessionRulesDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl SessionRulesDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("session_rules_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SessionRulesDetails { 
	pub context : u32, 
	pub transport_proto : TransportProto, 
	pub lcl : Prefix, 
	pub rmt : Prefix, 
	pub lcl_port : u16, 
	pub rmt_port : u16, 
	pub action_index : u32, 
	pub appns_index : u32, 
	pub scope : SessionRuleScope, 
	pub tag : FixedSizeString<U64>, 
} 
impl SessionRulesDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("session_rules_details_304b91f0") 
	 } 
} 
