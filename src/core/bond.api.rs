/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfStatusFlags { 
	 IF_STATUS_API_FLAG_ADMIN_UP=1, 
	 IF_STATUS_API_FLAG_LINK_UP=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MtuProto { 
	 MTU_PROTO_API_L3=0, 
	 MTU_PROTO_API_IP4=1, 
	 MTU_PROTO_API_IP6=2, 
	 MTU_PROTO_API_MPLS=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum LinkDuplex { 
	 LINK_DUPLEX_API_UNKNOWN=0, 
	 LINK_DUPLEX_API_HALF=1, 
	 LINK_DUPLEX_API_FULL=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SubIfFlags { 
	 SUB_IF_API_FLAG_NO_TAGS=1, 
	 SUB_IF_API_FLAG_ONE_TAG=2, 
	 SUB_IF_API_FLAG_TWO_TAGS=4, 
	 SUB_IF_API_FLAG_DOT1AD=8, 
	 SUB_IF_API_FLAG_EXACT_MATCH=16, 
	 SUB_IF_API_FLAG_DEFAULT=32, 
	 SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY=64, 
	 SUB_IF_API_FLAG_INNER_VLAN_ID_ANY=128, 
	 SUB_IF_API_FLAG_MASK_VNET=254, 
	 SUB_IF_API_FLAG_DOT1AH=256, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum RxMode { 
	 RX_MODE_API_UNKNOWN=0, 
	 RX_MODE_API_POLLING=1, 
	 RX_MODE_API_INTERRUPT=2, 
	 RX_MODE_API_ADAPTIVE=3, 
	 RX_MODE_API_DEFAULT=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfType { 
	 IF_API_TYPE_HARDWARE=0, 
	 IF_API_TYPE_SUB=1, 
	 IF_API_TYPE_P2P=2, 
	 IF_API_TYPE_PIPE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Direction { 
	 RX=0, 
	 TX=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum BondMode { 
	 BOND_API_MODE_ROUND_ROBIN=1, 
	 BOND_API_MODE_ACTIVE_BACKUP=2, 
	 BOND_API_MODE_XOR=3, 
	 BOND_API_MODE_BROADCAST=4, 
	 BOND_API_MODE_LACP=5, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum BondLbAlgo { 
	 BOND_API_LB_ALGO_L2=0, 
	 BOND_API_LB_ALGO_L34=1, 
	 BOND_API_LB_ALGO_L23=2, 
	 BOND_API_LB_ALGO_RR=3, 
	 BOND_API_LB_ALGO_BC=4, 
	 BOND_API_LB_ALGO_AB=5, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondCreate { 
	pub client_index : u32, 
	pub context : u32, 
	pub id : u32, 
	pub use_custom_mac : bool, 
	pub mac_address : MacAddress, 
	pub mode : BondMode, 
	pub lb : BondLbAlgo, 
	pub numa_only : bool, 
} 
impl BondCreate { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_create_48883c7e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondCreateReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BondCreateReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_create_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondCreate2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub mode : BondMode, 
	pub lb : BondLbAlgo, 
	pub numa_only : bool, 
	pub enable_gso : bool, 
	pub use_custom_mac : bool, 
	pub mac_address : MacAddress, 
	pub id : u32, 
} 
impl BondCreate2 { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_create2_912fda76") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondCreate2Reply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BondCreate2Reply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_create2_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondDelete { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BondDelete { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_delete_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondDeleteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BondDeleteReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_delete_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondEnslave { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub bond_sw_if_index : InterfaceIndex, 
	pub is_passive : bool, 
	pub is_long_timeout : bool, 
} 
impl BondEnslave { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_enslave_076ecfa7") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondEnslaveReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BondEnslaveReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_enslave_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondAddMember { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub bond_sw_if_index : InterfaceIndex, 
	pub is_passive : bool, 
	pub is_long_timeout : bool, 
} 
impl BondAddMember { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_add_member_e7d14948") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondAddMemberReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BondAddMemberReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_add_member_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondDetachSlave { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BondDetachSlave { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_detach_slave_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondDetachSlaveReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BondDetachSlaveReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_detach_slave_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondDetachMember { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BondDetachMember { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_detach_member_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BondDetachMemberReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BondDetachMemberReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bond_detach_member_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceBondDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl SwInterfaceBondDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_bond_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceBondDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub id : u32, 
	pub mode : BondMode, 
	pub lb : BondLbAlgo, 
	pub numa_only : bool, 
	pub active_slaves : u32, 
	pub slaves : u32, 
	pub interface_name : FixedSizeString<U64>, 
} 
impl SwInterfaceBondDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_bond_details_f5ef2106") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwBondInterfaceDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl SwBondInterfaceDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_bond_interface_dump_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwBondInterfaceDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub id : u32, 
	pub mode : BondMode, 
	pub lb : BondLbAlgo, 
	pub numa_only : bool, 
	pub active_members : u32, 
	pub members : u32, 
	pub interface_name : FixedSizeString<U64>, 
} 
impl SwBondInterfaceDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_bond_interface_details_9428a69c") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSlaveDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl SwInterfaceSlaveDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_slave_dump_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSlaveDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub interface_name : FixedSizeString<U64>, 
	pub is_passive : bool, 
	pub is_long_timeout : bool, 
	pub is_local_numa : bool, 
	pub weight : u32, 
} 
impl SwInterfaceSlaveDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_slave_details_3c4a0e23") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwMemberInterfaceDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl SwMemberInterfaceDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_member_interface_dump_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwMemberInterfaceDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub interface_name : FixedSizeString<U64>, 
	pub is_passive : bool, 
	pub is_long_timeout : bool, 
	pub is_local_numa : bool, 
	pub weight : u32, 
} 
impl SwMemberInterfaceDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_member_interface_details_3c4a0e23") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetBondWeight { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub weight : u32, 
} 
impl SwInterfaceSetBondWeight { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_bond_weight_deb510a0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetBondWeightReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SwInterfaceSetBondWeightReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_bond_weight_reply_e8d4e804") 
	 } 
} 
