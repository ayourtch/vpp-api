/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Sse2QosAction { 
	pub typ : Sse2QosActionType, 
	pub dscp : u8, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfStatusFlags { 
	 IF_STATUS_API_FLAG_ADMIN_UP=1, 
	 IF_STATUS_API_FLAG_LINK_UP=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MtuProto { 
	 MTU_PROTO_API_L3=0, 
	 MTU_PROTO_API_IP4=1, 
	 MTU_PROTO_API_IP6=2, 
	 MTU_PROTO_API_MPLS=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum LinkDuplex { 
	 LINK_DUPLEX_API_UNKNOWN=0, 
	 LINK_DUPLEX_API_HALF=1, 
	 LINK_DUPLEX_API_FULL=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SubIfFlags { 
	 SUB_IF_API_FLAG_NO_TAGS=1, 
	 SUB_IF_API_FLAG_ONE_TAG=2, 
	 SUB_IF_API_FLAG_TWO_TAGS=4, 
	 SUB_IF_API_FLAG_DOT1AD=8, 
	 SUB_IF_API_FLAG_EXACT_MATCH=16, 
	 SUB_IF_API_FLAG_DEFAULT=32, 
	 SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY=64, 
	 SUB_IF_API_FLAG_INNER_VLAN_ID_ANY=128, 
	 SUB_IF_API_FLAG_MASK_VNET=254, 
	 SUB_IF_API_FLAG_DOT1AH=256, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum RxMode { 
	 RX_MODE_API_UNKNOWN=0, 
	 RX_MODE_API_POLLING=1, 
	 RX_MODE_API_INTERRUPT=2, 
	 RX_MODE_API_ADAPTIVE=3, 
	 RX_MODE_API_DEFAULT=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfType { 
	 IF_API_TYPE_HARDWARE=0, 
	 IF_API_TYPE_SUB=1, 
	 IF_API_TYPE_P2P=2, 
	 IF_API_TYPE_PIPE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Direction { 
	 RX=0, 
	 TX=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Sse2QosRateType { 
	 SSE2_QOS_RATE_API_KBPS=0, 
	 SSE2_QOS_RATE_API_PPS=1, 
	 SSE2_QOS_RATE_API_INVALID=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Sse2QosRoundType { 
	 SSE2_QOS_ROUND_API_TO_CLOSEST=0, 
	 SSE2_QOS_ROUND_API_TO_UP=1, 
	 SSE2_QOS_ROUND_API_TO_DOWN=2, 
	 SSE2_QOS_ROUND_API_INVALID=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Sse2QosPolicerType { 
	 SSE2_QOS_POLICER_TYPE_API_1R2C=0, 
	 SSE2_QOS_POLICER_TYPE_API_1R3C_RFC_2697=1, 
	 SSE2_QOS_POLICER_TYPE_API_2R3C_RFC_2698=2, 
	 SSE2_QOS_POLICER_TYPE_API_2R3C_RFC_4115=3, 
	 SSE2_QOS_POLICER_TYPE_API_2R3C_RFC_MEF5CF1=4, 
	 SSE2_QOS_POLICER_TYPE_API_MAX=5, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Sse2QosActionType { 
	 SSE2_QOS_ACTION_API_DROP=0, 
	 SSE2_QOS_ACTION_API_TRANSMIT=1, 
	 SSE2_QOS_ACTION_API_MARK_AND_TRANSMIT=2, 
} 
pub type InterfaceIndex=u32; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerBind { 
	pub client_index : u32, 
	pub context : u32, 
	pub name : FixedSizeString<U64>, 
	pub worker_index : u32, 
	pub bind_enable : bool, 
} 
impl PolicerBind { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_bind_dcf516f9") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerBindReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl PolicerBindReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_bind_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerInput { 
	pub client_index : u32, 
	pub context : u32, 
	pub name : FixedSizeString<U64>, 
	pub sw_if_index : InterfaceIndex, 
	pub apply : bool, 
} 
impl PolicerInput { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_input_233f0ef5") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerInputReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl PolicerInputReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_input_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub name : FixedSizeString<U64>, 
	pub cir : u32, 
	pub eir : u32, 
	pub cb : u64, 
	pub eb : u64, 
	pub rate_type : Sse2QosRateType, 
	pub round_type : Sse2QosRoundType, 
	pub typ : Sse2QosPolicerType, 
	pub color_aware : bool, 
	pub conform_action : Sse2QosAction, 
	pub exceed_action : Sse2QosAction, 
	pub violate_action : Sse2QosAction, 
} 
impl PolicerAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_add_del_cb948f6e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub policer_index : u32, 
} 
impl PolicerAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_add_del_reply_a177cef2") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub match_name_valid : bool, 
	pub match_name : FixedSizeString<U64>, 
} 
impl PolicerDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_dump_35f1ae0f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PolicerDetails { 
	pub context : u32, 
	pub name : FixedSizeString<U64>, 
	pub cir : u32, 
	pub eir : u32, 
	pub cb : u64, 
	pub eb : u64, 
	pub rate_type : Sse2QosRateType, 
	pub round_type : Sse2QosRoundType, 
	pub typ : Sse2QosPolicerType, 
	pub conform_action : Sse2QosAction, 
	pub exceed_action : Sse2QosAction, 
	pub violate_action : Sse2QosAction, 
	pub single_rate : bool, 
	pub color_aware : bool, 
	pub scale : u32, 
	pub cir_tokens_per_period : u32, 
	pub pir_tokens_per_period : u32, 
	pub current_limit : u32, 
	pub current_bucket : u32, 
	pub extended_limit : u32, 
	pub extended_bucket : u32, 
	pub last_update_time : u64, 
} 
impl PolicerDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("policer_details_a43f781a") 
	 } 
} 
