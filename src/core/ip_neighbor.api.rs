/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighbor { 
	pub sw_if_index : InterfaceIndex, 
	pub flags : IpNeighborFlags, 
	pub mac_address : MacAddress, 
	pub ip_address : Address, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpNeighborFlags { 
	 IP_API_NEIGHBOR_FLAG_NONE=0, 
	 IP_API_NEIGHBOR_FLAG_STATIC=1, 
	 IP_API_NEIGHBOR_FLAG_NO_FIB_ENTRY=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IpNeighborEventFlags { 
	 IP_NEIGHBOR_API_EVENT_FLAG_ADDED=1, 
	 IP_NEIGHBOR_API_EVENT_FLAG_REMOVED=2, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub neighbor : IpNeighbor, 
} 
impl IpNeighborAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_add_del_105518b6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub stats_index : u32, 
} 
impl IpNeighborAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_add_del_reply_1992deab") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub af : AddressFamily, 
} 
impl IpNeighborDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_dump_cd831298") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborDetails { 
	pub context : u32, 
	pub age : f64, 
	pub neighbor : IpNeighbor, 
} 
impl IpNeighborDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_details_870e80b9") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborConfig { 
	pub client_index : u32, 
	pub context : u32, 
	pub af : AddressFamily, 
	pub max_number : u32, 
	pub max_age : u32, 
	pub recycle : bool, 
} 
impl IpNeighborConfig { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_config_f4a5cf44") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborConfigReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpNeighborConfigReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_config_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborReplaceBegin { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IpNeighborReplaceBegin { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_replace_begin_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborReplaceBeginReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpNeighborReplaceBeginReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_replace_begin_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborReplaceEnd { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IpNeighborReplaceEnd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_replace_end_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborReplaceEndReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpNeighborReplaceEndReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_replace_end_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborFlush { 
	pub client_index : u32, 
	pub context : u32, 
	pub af : AddressFamily, 
	pub sw_if_index : InterfaceIndex, 
} 
impl IpNeighborFlush { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_flush_16aa35d2") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborFlushReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpNeighborFlushReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_flush_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantIpNeighborEvents { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : bool, 
	pub pid : u32, 
	pub ip : Address, 
	pub sw_if_index : InterfaceIndex, 
} 
impl WantIpNeighborEvents { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_ip_neighbor_events_1a312870") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantIpNeighborEventsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl WantIpNeighborEventsReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_ip_neighbor_events_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborEvent { 
	pub client_index : u32, 
	pub pid : u32, 
	pub neighbor : IpNeighbor, 
} 
impl IpNeighborEvent { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_event_83933131") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantIpNeighborEventsV2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : bool, 
	pub pid : u32, 
	pub ip : Address, 
	pub sw_if_index : InterfaceIndex, 
} 
impl WantIpNeighborEventsV2 { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_ip_neighbor_events_v2_73e70a86") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantIpNeighborEventsV2Reply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl WantIpNeighborEventsV2Reply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_ip_neighbor_events_v2_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpNeighborEventV2 { 
	pub client_index : u32, 
	pub pid : u32, 
	pub flags : IpNeighborEventFlags, 
	pub neighbor : IpNeighbor, 
} 
impl IpNeighborEventV2 { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_neighbor_event_v2_c1d53dc0") 
	 } 
} 
