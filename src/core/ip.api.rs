/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Address { 
	pub af : AddressFamily, 
	pub un : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Prefix { 
	pub address : Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4AddressAndMask { 
	pub addr : Ip4Address, 
	pub mask : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6AddressAndMask { 
	pub addr : Ip6Address, 
	pub mask : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Mprefix { 
	pub af : AddressFamily, 
	pub grp_address_length : u16, 
	pub grp_address : AddressUnion, 
	pub src_address : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6Prefix { 
	pub address : Ip6Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4Prefix { 
	pub address : Ip4Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PrefixMatcher { 
	pub le : u8, 
	pub ge : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibMplsLabel { 
	pub is_uniform : u8, 
	pub label : u32, 
	pub ttl : u8, 
	pub exp : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibPathNh { 
	pub address : AddressUnion, 
	pub via_label : u32, 
	pub obj_id : u32, 
	pub classify_table_index : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibPath { 
	pub sw_if_index : u32, 
	pub table_id : u32, 
	pub rpf_id : u32, 
	pub weight : u8, 
	pub preference : u8, 
	pub typ : FibPathType, 
	pub flags : FibPathFlags, 
	pub proto : FibPathNhProto, 
	pub nh : FibPathNh, 
	pub n_labels : u8, 
	pub label_stack : FibMplsLabel, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Address { 
	pub af : AddressFamily, 
	pub un : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Prefix { 
	pub address : Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4AddressAndMask { 
	pub addr : Ip4Address, 
	pub mask : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6AddressAndMask { 
	pub addr : Ip6Address, 
	pub mask : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Mprefix { 
	pub af : AddressFamily, 
	pub grp_address_length : u16, 
	pub grp_address : AddressUnion, 
	pub src_address : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6Prefix { 
	pub address : Ip6Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4Prefix { 
	pub address : Ip4Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PrefixMatcher { 
	pub le : u8, 
	pub ge : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibMplsLabel { 
	pub is_uniform : u8, 
	pub label : u32, 
	pub ttl : u8, 
	pub exp : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibPathNh { 
	pub address : AddressUnion, 
	pub via_label : u32, 
	pub obj_id : u32, 
	pub classify_table_index : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FibPath { 
	pub sw_if_index : u32, 
	pub table_id : u32, 
	pub rpf_id : u32, 
	pub weight : u8, 
	pub preference : u8, 
	pub typ : FibPathType, 
	pub flags : FibPathFlags, 
	pub proto : FibPathNhProto, 
	pub nh : FibPathNh, 
	pub n_labels : u8, 
	pub label_stack : FibMplsLabel, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Address { 
	pub af : AddressFamily, 
	pub un : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Prefix { 
	pub address : Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4AddressAndMask { 
	pub addr : Ip4Address, 
	pub mask : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6AddressAndMask { 
	pub addr : Ip6Address, 
	pub mask : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Mprefix { 
	pub af : AddressFamily, 
	pub grp_address_length : u16, 
	pub grp_address : AddressUnion, 
	pub src_address : AddressUnion, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip6Prefix { 
	pub address : Ip6Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Ip4Prefix { 
	pub address : Ip4Address, 
	pub len : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PrefixMatcher { 
	pub le : u8, 
	pub ge : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MfibPath { 
	pub itf_flags : MfibItfFlags, 
	pub path : FibPath, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTable { 
	pub table_id : u32, 
	pub is_ip6 : bool, 
	pub name : String, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpRoute { 
	pub table_id : u32, 
	pub stats_index : u32, 
	pub prefix : Prefix, 
	pub n_paths : u8, 
	pub paths : FibPath, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpMroute { 
	pub table_id : u32, 
	pub entry_flags : MfibEntryFlags, 
	pub rpf_id : u32, 
	pub prefix : Mprefix, 
	pub n_paths : u8, 
	pub paths : MfibPath, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct PuntRedirect { 
	pub rx_sw_if_index : InterfaceIndex, 
	pub tx_sw_if_index : InterfaceIndex, 
	pub nh : Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtu { 
	pub client_index : u32, 
	pub context : u32, 
	pub table_id : u32, 
	pub nh : Address, 
	pub path_mtu : u16, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
union address_union { 
	 ip4 : Ip4Address, 
	 ip6 : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
union address_union { 
	 ip4 : Ip4Address, 
	 ip6 : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
union address_union { 
	 ip4 : Ip4Address, 
	 ip6 : Ip6Address, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfStatusFlags { 
	 IF_STATUS_API_FLAG_ADMIN_UP=1, 
	 IF_STATUS_API_FLAG_LINK_UP=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MtuProto { 
	 MTU_PROTO_API_L3=0, 
	 MTU_PROTO_API_IP4=1, 
	 MTU_PROTO_API_IP6=2, 
	 MTU_PROTO_API_MPLS=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum LinkDuplex { 
	 LINK_DUPLEX_API_UNKNOWN=0, 
	 LINK_DUPLEX_API_HALF=1, 
	 LINK_DUPLEX_API_FULL=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SubIfFlags { 
	 SUB_IF_API_FLAG_NO_TAGS=1, 
	 SUB_IF_API_FLAG_ONE_TAG=2, 
	 SUB_IF_API_FLAG_TWO_TAGS=4, 
	 SUB_IF_API_FLAG_DOT1AD=8, 
	 SUB_IF_API_FLAG_EXACT_MATCH=16, 
	 SUB_IF_API_FLAG_DEFAULT=32, 
	 SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY=64, 
	 SUB_IF_API_FLAG_INNER_VLAN_ID_ANY=128, 
	 SUB_IF_API_FLAG_MASK_VNET=254, 
	 SUB_IF_API_FLAG_DOT1AH=256, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum RxMode { 
	 RX_MODE_API_UNKNOWN=0, 
	 RX_MODE_API_POLLING=1, 
	 RX_MODE_API_INTERRUPT=2, 
	 RX_MODE_API_ADAPTIVE=3, 
	 RX_MODE_API_DEFAULT=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfType { 
	 IF_API_TYPE_HARDWARE=0, 
	 IF_API_TYPE_SUB=1, 
	 IF_API_TYPE_P2P=2, 
	 IF_API_TYPE_PIPE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Direction { 
	 RX=0, 
	 TX=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum AddressFamily { 
	 ADDRESS_IP4=0, 
	 ADDRESS_IP6=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpFeatureLocation { 
	 IP_API_FEATURE_INPUT=0, 
	 IP_API_FEATURE_OUTPUT=1, 
	 IP_API_FEATURE_LOCAL=2, 
	 IP_API_FEATURE_PUNT=3, 
	 IP_API_FEATURE_DROP=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpEcn { 
	 IP_API_ECN_NONE=0, 
	 IP_API_ECN_ECT0=1, 
	 IP_API_ECN_ECT1=2, 
	 IP_API_ECN_CE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpDscp { 
	 IP_API_DSCP_CS0=0, 
	 IP_API_DSCP_CS1=8, 
	 IP_API_DSCP_AF11=10, 
	 IP_API_DSCP_AF12=12, 
	 IP_API_DSCP_AF13=14, 
	 IP_API_DSCP_CS2=16, 
	 IP_API_DSCP_AF21=18, 
	 IP_API_DSCP_AF22=20, 
	 IP_API_DSCP_AF23=22, 
	 IP_API_DSCP_CS3=24, 
	 IP_API_DSCP_AF31=26, 
	 IP_API_DSCP_AF32=28, 
	 IP_API_DSCP_AF33=30, 
	 IP_API_DSCP_CS4=32, 
	 IP_API_DSCP_AF41=34, 
	 IP_API_DSCP_AF42=36, 
	 IP_API_DSCP_AF43=38, 
	 IP_API_DSCP_CS5=40, 
	 IP_API_DSCP_EF=46, 
	 IP_API_DSCP_CS6=48, 
	 IP_API_DSCP_CS7=50, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpProto { 
	 IP_API_PROTO_HOPOPT=0, 
	 IP_API_PROTO_ICMP=1, 
	 IP_API_PROTO_IGMP=2, 
	 IP_API_PROTO_TCP=6, 
	 IP_API_PROTO_UDP=17, 
	 IP_API_PROTO_GRE=47, 
	 IP_API_PROTO_ESP=50, 
	 IP_API_PROTO_AH=51, 
	 IP_API_PROTO_ICMP6=58, 
	 IP_API_PROTO_EIGRP=88, 
	 IP_API_PROTO_OSPF=89, 
	 IP_API_PROTO_SCTP=132, 
	 IP_API_PROTO_RESERVED=255, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathNhProto { 
	 FIB_API_PATH_NH_PROTO_IP4=0, 
	 FIB_API_PATH_NH_PROTO_IP6=1, 
	 FIB_API_PATH_NH_PROTO_MPLS=2, 
	 FIB_API_PATH_NH_PROTO_ETHERNET=3, 
	 FIB_API_PATH_NH_PROTO_BIER=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathFlags { 
	 FIB_API_PATH_FLAG_NONE=0, 
	 FIB_API_PATH_FLAG_RESOLVE_VIA_ATTACHED=1, 
	 FIB_API_PATH_FLAG_RESOLVE_VIA_HOST=2, 
	 FIB_API_PATH_FLAG_POP_PW_CW=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathType { 
	 FIB_API_PATH_TYPE_NORMAL=0, 
	 FIB_API_PATH_TYPE_LOCAL=1, 
	 FIB_API_PATH_TYPE_DROP=2, 
	 FIB_API_PATH_TYPE_UDP_ENCAP=3, 
	 FIB_API_PATH_TYPE_BIER_IMP=4, 
	 FIB_API_PATH_TYPE_ICMP_UNREACH=5, 
	 FIB_API_PATH_TYPE_ICMP_PROHIBIT=6, 
	 FIB_API_PATH_TYPE_SOURCE_LOOKUP=7, 
	 FIB_API_PATH_TYPE_DVR=8, 
	 FIB_API_PATH_TYPE_INTERFACE_RX=9, 
	 FIB_API_PATH_TYPE_CLASSIFY=10, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum AddressFamily { 
	 ADDRESS_IP4=0, 
	 ADDRESS_IP6=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpFeatureLocation { 
	 IP_API_FEATURE_INPUT=0, 
	 IP_API_FEATURE_OUTPUT=1, 
	 IP_API_FEATURE_LOCAL=2, 
	 IP_API_FEATURE_PUNT=3, 
	 IP_API_FEATURE_DROP=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpEcn { 
	 IP_API_ECN_NONE=0, 
	 IP_API_ECN_ECT0=1, 
	 IP_API_ECN_ECT1=2, 
	 IP_API_ECN_CE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpDscp { 
	 IP_API_DSCP_CS0=0, 
	 IP_API_DSCP_CS1=8, 
	 IP_API_DSCP_AF11=10, 
	 IP_API_DSCP_AF12=12, 
	 IP_API_DSCP_AF13=14, 
	 IP_API_DSCP_CS2=16, 
	 IP_API_DSCP_AF21=18, 
	 IP_API_DSCP_AF22=20, 
	 IP_API_DSCP_AF23=22, 
	 IP_API_DSCP_CS3=24, 
	 IP_API_DSCP_AF31=26, 
	 IP_API_DSCP_AF32=28, 
	 IP_API_DSCP_AF33=30, 
	 IP_API_DSCP_CS4=32, 
	 IP_API_DSCP_AF41=34, 
	 IP_API_DSCP_AF42=36, 
	 IP_API_DSCP_AF43=38, 
	 IP_API_DSCP_CS5=40, 
	 IP_API_DSCP_EF=46, 
	 IP_API_DSCP_CS6=48, 
	 IP_API_DSCP_CS7=50, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpProto { 
	 IP_API_PROTO_HOPOPT=0, 
	 IP_API_PROTO_ICMP=1, 
	 IP_API_PROTO_IGMP=2, 
	 IP_API_PROTO_TCP=6, 
	 IP_API_PROTO_UDP=17, 
	 IP_API_PROTO_GRE=47, 
	 IP_API_PROTO_ESP=50, 
	 IP_API_PROTO_AH=51, 
	 IP_API_PROTO_ICMP6=58, 
	 IP_API_PROTO_EIGRP=88, 
	 IP_API_PROTO_OSPF=89, 
	 IP_API_PROTO_SCTP=132, 
	 IP_API_PROTO_RESERVED=255, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathNhProto { 
	 FIB_API_PATH_NH_PROTO_IP4=0, 
	 FIB_API_PATH_NH_PROTO_IP6=1, 
	 FIB_API_PATH_NH_PROTO_MPLS=2, 
	 FIB_API_PATH_NH_PROTO_ETHERNET=3, 
	 FIB_API_PATH_NH_PROTO_BIER=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathFlags { 
	 FIB_API_PATH_FLAG_NONE=0, 
	 FIB_API_PATH_FLAG_RESOLVE_VIA_ATTACHED=1, 
	 FIB_API_PATH_FLAG_RESOLVE_VIA_HOST=2, 
	 FIB_API_PATH_FLAG_POP_PW_CW=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FibPathType { 
	 FIB_API_PATH_TYPE_NORMAL=0, 
	 FIB_API_PATH_TYPE_LOCAL=1, 
	 FIB_API_PATH_TYPE_DROP=2, 
	 FIB_API_PATH_TYPE_UDP_ENCAP=3, 
	 FIB_API_PATH_TYPE_BIER_IMP=4, 
	 FIB_API_PATH_TYPE_ICMP_UNREACH=5, 
	 FIB_API_PATH_TYPE_ICMP_PROHIBIT=6, 
	 FIB_API_PATH_TYPE_SOURCE_LOOKUP=7, 
	 FIB_API_PATH_TYPE_DVR=8, 
	 FIB_API_PATH_TYPE_INTERFACE_RX=9, 
	 FIB_API_PATH_TYPE_CLASSIFY=10, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum AddressFamily { 
	 ADDRESS_IP4=0, 
	 ADDRESS_IP6=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpFeatureLocation { 
	 IP_API_FEATURE_INPUT=0, 
	 IP_API_FEATURE_OUTPUT=1, 
	 IP_API_FEATURE_LOCAL=2, 
	 IP_API_FEATURE_PUNT=3, 
	 IP_API_FEATURE_DROP=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpEcn { 
	 IP_API_ECN_NONE=0, 
	 IP_API_ECN_ECT0=1, 
	 IP_API_ECN_ECT1=2, 
	 IP_API_ECN_CE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpDscp { 
	 IP_API_DSCP_CS0=0, 
	 IP_API_DSCP_CS1=8, 
	 IP_API_DSCP_AF11=10, 
	 IP_API_DSCP_AF12=12, 
	 IP_API_DSCP_AF13=14, 
	 IP_API_DSCP_CS2=16, 
	 IP_API_DSCP_AF21=18, 
	 IP_API_DSCP_AF22=20, 
	 IP_API_DSCP_AF23=22, 
	 IP_API_DSCP_CS3=24, 
	 IP_API_DSCP_AF31=26, 
	 IP_API_DSCP_AF32=28, 
	 IP_API_DSCP_AF33=30, 
	 IP_API_DSCP_CS4=32, 
	 IP_API_DSCP_AF41=34, 
	 IP_API_DSCP_AF42=36, 
	 IP_API_DSCP_AF43=38, 
	 IP_API_DSCP_CS5=40, 
	 IP_API_DSCP_EF=46, 
	 IP_API_DSCP_CS6=48, 
	 IP_API_DSCP_CS7=50, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum IpProto { 
	 IP_API_PROTO_HOPOPT=0, 
	 IP_API_PROTO_ICMP=1, 
	 IP_API_PROTO_IGMP=2, 
	 IP_API_PROTO_TCP=6, 
	 IP_API_PROTO_UDP=17, 
	 IP_API_PROTO_GRE=47, 
	 IP_API_PROTO_ESP=50, 
	 IP_API_PROTO_AH=51, 
	 IP_API_PROTO_ICMP6=58, 
	 IP_API_PROTO_EIGRP=88, 
	 IP_API_PROTO_OSPF=89, 
	 IP_API_PROTO_SCTP=132, 
	 IP_API_PROTO_RESERVED=255, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MfibEntryFlags { 
	 MFIB_API_ENTRY_FLAG_NONE=0, 
	 MFIB_API_ENTRY_FLAG_SIGNAL=1, 
	 MFIB_API_ENTRY_FLAG_DROP=2, 
	 MFIB_API_ENTRY_FLAG_CONNECTED=4, 
	 MFIB_API_ENTRY_FLAG_ACCEPT_ALL_ITF=8, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MfibItfFlags { 
	 MFIB_API_ITF_FLAG_NONE=0, 
	 MFIB_API_ITF_FLAG_NEGATE_SIGNAL=1, 
	 MFIB_API_ITF_FLAG_ACCEPT=2, 
	 MFIB_API_ITF_FLAG_FORWARD=4, 
	 MFIB_API_ITF_FLAG_SIGNAL_PRESENT=8, 
	 MFIB_API_ITF_FLAG_DONT_PRESERVE=16, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfStatusFlags { 
	 IF_STATUS_API_FLAG_ADMIN_UP=1, 
	 IF_STATUS_API_FLAG_LINK_UP=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MtuProto { 
	 MTU_PROTO_API_L3=0, 
	 MTU_PROTO_API_IP4=1, 
	 MTU_PROTO_API_IP6=2, 
	 MTU_PROTO_API_MPLS=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum LinkDuplex { 
	 LINK_DUPLEX_API_UNKNOWN=0, 
	 LINK_DUPLEX_API_HALF=1, 
	 LINK_DUPLEX_API_FULL=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum SubIfFlags { 
	 SUB_IF_API_FLAG_NO_TAGS=1, 
	 SUB_IF_API_FLAG_ONE_TAG=2, 
	 SUB_IF_API_FLAG_TWO_TAGS=4, 
	 SUB_IF_API_FLAG_DOT1AD=8, 
	 SUB_IF_API_FLAG_EXACT_MATCH=16, 
	 SUB_IF_API_FLAG_DEFAULT=32, 
	 SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY=64, 
	 SUB_IF_API_FLAG_INNER_VLAN_ID_ANY=128, 
	 SUB_IF_API_FLAG_MASK_VNET=254, 
	 SUB_IF_API_FLAG_DOT1AH=256, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum RxMode { 
	 RX_MODE_API_UNKNOWN=0, 
	 RX_MODE_API_POLLING=1, 
	 RX_MODE_API_INTERRUPT=2, 
	 RX_MODE_API_ADAPTIVE=3, 
	 RX_MODE_API_DEFAULT=4, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IfType { 
	 IF_API_TYPE_HARDWARE=0, 
	 IF_API_TYPE_SUB=1, 
	 IF_API_TYPE_P2P=2, 
	 IF_API_TYPE_PIPE=3, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum Direction { 
	 RX=0, 
	 TX=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum IpReassType { 
	 IP_REASS_TYPE_FULL=0, 
	 IP_REASS_TYPE_SHALLOW_VIRTUAL=1, 
} 
pub type InterfaceIndex=u32; 
pub type Ip4Address=[u8;4]; 
pub type Ip6Address=[u8;16]; 
pub type AddressWithPrefix=Prefix; 
pub type Ip4AddressWithPrefix=Ip4Prefix; 
pub type Ip6AddressWithPrefix=Ip6Prefix; 
pub type MacAddress=[u8;6]; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub table : IpTable, 
} 
impl IpTableAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_add_del_0ffdaec0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpTableAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IpTableDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableReplaceBegin { 
	pub client_index : u32, 
	pub context : u32, 
	pub table : IpTable, 
} 
impl IpTableReplaceBegin { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_replace_begin_b9d2e09e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableReplaceBeginReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpTableReplaceBeginReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_replace_begin_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableReplaceEnd { 
	pub client_index : u32, 
	pub context : u32, 
	pub table : IpTable, 
} 
impl IpTableReplaceEnd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_replace_end_b9d2e09e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableReplaceEndReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpTableReplaceEndReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_replace_end_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableFlush { 
	pub client_index : u32, 
	pub context : u32, 
	pub table : IpTable, 
} 
impl IpTableFlush { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_flush_b9d2e09e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableFlushReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpTableFlushReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_flush_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpTableDetails { 
	pub context : u32, 
	pub table : IpTable, 
} 
impl IpTableDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_table_details_c79fca0f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpRouteAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub is_multipath : bool, 
	pub route : IpRoute, 
} 
impl IpRouteAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_route_add_del_c1ff832d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpRouteAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub stats_index : u32, 
} 
impl IpRouteAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_route_add_del_reply_1992deab") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpRouteDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub table : IpTable, 
} 
impl IpRouteDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_route_dump_b9d2e09e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpRouteDetails { 
	pub context : u32, 
	pub route : IpRoute, 
} 
impl IpRouteDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_route_details_d1ffaae1") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpRouteLookup { 
	pub client_index : u32, 
	pub context : u32, 
	pub table_id : u32, 
	pub exact : u8, 
	pub prefix : Prefix, 
} 
impl IpRouteLookup { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_route_lookup_e2986185") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpRouteLookupReply { 
	pub context : u32, 
	pub retval : i32, 
	pub route : IpRoute, 
} 
impl IpRouteLookupReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_route_lookup_reply_ae99de8e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SetIpFlowHash { 
	pub client_index : u32, 
	pub context : u32, 
	pub vrf_id : u32, 
	pub is_ipv6 : bool, 
	pub src : bool, 
	pub dst : bool, 
	pub sport : bool, 
	pub dport : bool, 
	pub proto : bool, 
	pub reverse : bool, 
	pub symmetric : bool, 
} 
impl SetIpFlowHash { 
	 pub fn get_message_id() -> String { 
	 	 String::from("set_ip_flow_hash_084ee09e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SetIpFlowHashReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SetIpFlowHashReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("set_ip_flow_hash_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SetIpFlowHashV2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub table_id : u32, 
	pub af : AddressFamily, 
	pub flow_hash_config : IpFlowHashConfig, 
} 
impl SetIpFlowHashV2 { 
	 pub fn get_message_id() -> String { 
	 	 String::from("set_ip_flow_hash_v2_6d132100") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SetIpFlowHashV2Reply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SetIpFlowHashV2Reply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("set_ip_flow_hash_v2_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SetIpFlowHashRouterId { 
	pub client_index : u32, 
	pub context : u32, 
	pub router_id : u32, 
} 
impl SetIpFlowHashRouterId { 
	 pub fn get_message_id() -> String { 
	 	 String::from("set_ip_flow_hash_router_id_03e4f48e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SetIpFlowHashRouterIdReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SetIpFlowHashRouterIdReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("set_ip_flow_hash_router_id_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceIp6EnableDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub enable : bool, 
} 
impl SwInterfaceIp6EnableDisable { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_ip6_enable_disable_ae6cfcfb") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceIp6EnableDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SwInterfaceIp6EnableDisableReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_ip6_enable_disable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpMtableDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IpMtableDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_mtable_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpMtableDetails { 
	pub client_index : u32, 
	pub context : u32, 
	pub table : IpTable, 
} 
impl IpMtableDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_mtable_details_b9d2e09e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpMrouteAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub is_multipath : bool, 
	pub route : IpMroute, 
} 
impl IpMrouteAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_mroute_add_del_0dd7e790") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpMrouteAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub stats_index : u32, 
} 
impl IpMrouteAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_mroute_add_del_reply_1992deab") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpMrouteDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub table : IpTable, 
} 
impl IpMrouteDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_mroute_dump_b9d2e09e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpMrouteDetails { 
	pub context : u32, 
	pub route : IpMroute, 
} 
impl IpMrouteDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_mroute_details_c5cb23fc") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpAddressDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub prefix : AddressWithPrefix, 
} 
impl IpAddressDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_address_details_b1199745") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpAddressDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : bool, 
} 
impl IpAddressDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_address_dump_2d033de4") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpUnnumberedDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub ip_sw_if_index : InterfaceIndex, 
} 
impl IpUnnumberedDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_unnumbered_details_aa12a483") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpUnnumberedDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl IpUnnumberedDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_unnumbered_dump_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : bool, 
} 
impl IpDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_details_eb152d07") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_ipv6 : bool, 
} 
impl IpDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_dump_98d231ca") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MfibSignalDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl MfibSignalDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("mfib_signal_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MfibSignalDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub table_id : u32, 
	pub prefix : Mprefix, 
	pub ip_packet_len : u16, 
	pub ip_packet_data : u8, 
} 
impl MfibSignalDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("mfib_signal_details_64398a9a") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPuntPolice { 
	pub client_index : u32, 
	pub context : u32, 
	pub policer_index : u32, 
	pub is_add : bool, 
	pub is_ip6 : bool, 
} 
impl IpPuntPolice { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_punt_police_db867cea") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPuntPoliceReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpPuntPoliceReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_punt_police_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPuntRedirect { 
	pub client_index : u32, 
	pub context : u32, 
	pub punt : PuntRedirect, 
	pub is_add : bool, 
} 
impl IpPuntRedirect { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_punt_redirect_a9a5592c") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPuntRedirectReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpPuntRedirectReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_punt_redirect_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPuntRedirectDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : bool, 
} 
impl IpPuntRedirectDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_punt_redirect_dump_2d033de4") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPuntRedirectDetails { 
	pub context : u32, 
	pub punt : PuntRedirect, 
} 
impl IpPuntRedirectDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_punt_redirect_details_3924f5d3") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpContainerProxyAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub pfx : Prefix, 
	pub sw_if_index : InterfaceIndex, 
	pub is_add : bool, 
} 
impl IpContainerProxyAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_container_proxy_add_del_91189f40") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpContainerProxyAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpContainerProxyAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_container_proxy_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpContainerProxyDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IpContainerProxyDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_container_proxy_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpContainerProxyDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub prefix : Prefix, 
} 
impl IpContainerProxyDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_container_proxy_details_0ee460e8") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpSourceAndPortRangeCheckAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub prefix : Prefix, 
	pub number_of_ranges : u8, 
	pub low_ports : u16, 
	pub high_ports : u16, 
	pub vrf_id : u32, 
} 
impl IpSourceAndPortRangeCheckAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_source_and_port_range_check_add_del_8bfc76f2") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpSourceAndPortRangeCheckAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpSourceAndPortRangeCheckAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_source_and_port_range_check_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpSourceAndPortRangeCheckInterfaceAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub sw_if_index : InterfaceIndex, 
	pub tcp_in_vrf_id : u32, 
	pub tcp_out_vrf_id : u32, 
	pub udp_in_vrf_id : u32, 
	pub udp_out_vrf_id : u32, 
} 
impl IpSourceAndPortRangeCheckInterfaceAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_source_and_port_range_check_interface_add_del_e1ba8987") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpSourceAndPortRangeCheckInterfaceAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpSourceAndPortRangeCheckInterfaceAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_source_and_port_range_check_interface_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceIp6SetLinkLocalAddress { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub ip : Ip6Address, 
} 
impl SwInterfaceIp6SetLinkLocalAddress { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_ip6_set_link_local_address_2931d9fa") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceIp6SetLinkLocalAddressReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SwInterfaceIp6SetLinkLocalAddressReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_ip6_set_link_local_address_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceIp6GetLinkLocalAddress { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl SwInterfaceIp6GetLinkLocalAddress { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_ip6_get_link_local_address_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceIp6GetLinkLocalAddressReply { 
	pub context : u32, 
	pub retval : i32, 
	pub ip : Ip6Address, 
} 
impl SwInterfaceIp6GetLinkLocalAddressReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_ip6_get_link_local_address_reply_d16b7130") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IoamEnable { 
	pub client_index : u32, 
	pub context : u32, 
	pub id : u16, 
	pub seqno : bool, 
	pub analyse : bool, 
	pub pot_enable : bool, 
	pub trace_enable : bool, 
	pub node_id : u32, 
} 
impl IoamEnable { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ioam_enable_51ccd868") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IoamEnableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IoamEnableReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ioam_enable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IoamDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub id : u16, 
} 
impl IoamDisable { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ioam_disable_6b16a45e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IoamDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IoamDisableReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ioam_disable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpReassemblySet { 
	pub client_index : u32, 
	pub context : u32, 
	pub timeout_ms : u32, 
	pub max_reassemblies : u32, 
	pub max_reassembly_length : u32, 
	pub expire_walk_interval_ms : u32, 
	pub is_ip6 : bool, 
	pub typ : IpReassType, 
} 
impl IpReassemblySet { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_reassembly_set_16467d25") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpReassemblySetReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpReassemblySetReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_reassembly_set_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpReassemblyGet { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_ip6 : bool, 
	pub typ : IpReassType, 
} 
impl IpReassemblyGet { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_reassembly_get_ea13ff63") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpReassemblyGetReply { 
	pub context : u32, 
	pub retval : i32, 
	pub timeout_ms : u32, 
	pub max_reassemblies : u32, 
	pub max_reassembly_length : u32, 
	pub expire_walk_interval_ms : u32, 
	pub is_ip6 : bool, 
} 
impl IpReassemblyGetReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_reassembly_get_reply_d5eb8d34") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpReassemblyEnableDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub enable_ip4 : bool, 
	pub enable_ip6 : bool, 
	pub typ : IpReassType, 
} 
impl IpReassemblyEnableDisable { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_reassembly_enable_disable_885c85a6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpReassemblyEnableDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpReassemblyEnableDisableReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_reassembly_enable_disable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuUpdate { 
	pub client_index : u32, 
	pub context : u32, 
	pub pmtu : IpPathMtu, 
} 
impl IpPathMtuUpdate { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_update_10bbe5cb") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuUpdateReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpPathMtuUpdateReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_update_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuGet { 
	pub client_index : u32, 
	pub context : u32, 
	pub cursor : u32, 
} 
impl IpPathMtuGet { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_get_f75ba505") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuGetReply { 
	pub context : u32, 
	pub retval : i32, 
	pub cursor : u32, 
} 
impl IpPathMtuGetReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_get_reply_53b48f5d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuDetails { 
	pub context : u32, 
	pub pmtu : IpPathMtu, 
} 
impl IpPathMtuDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_details_ac9539a7") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuReplaceBegin { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IpPathMtuReplaceBegin { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_replace_begin_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuReplaceBeginReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpPathMtuReplaceBeginReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_replace_begin_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuReplaceEnd { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IpPathMtuReplaceEnd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_replace_end_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IpPathMtuReplaceEndReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IpPathMtuReplaceEndReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("ip_path_mtu_replace_end_reply_e8d4e804") 
	 } 
} 
