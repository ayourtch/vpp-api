/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::ip_types::*; 
use crate::interface_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpGroup { 
	pub filter : FilterMode, 
	pub n_srcs : u8, 
	pub sw_if_index : InterfaceIndex, 
	pub gaddr : Ip4Address, 
	pub saddrs : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct GroupPrefix { 
	pub typ : GroupPrefixType, 
	pub prefix : Prefix, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FilterMode { 
	 EXCLUDE=0, 
	 INCLUDE=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum GroupPrefixType { 
	 ASM=0, 
	 SSM=1, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpListen { 
	pub client_index : u32, 
	pub context : u32, 
	pub group : IgmpGroup, 
} 
impl IgmpListen { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_listen_3f93a51a") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpListenReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IgmpListenReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_listen_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpEnableDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : bool, 
	pub mode : u8, 
	pub sw_if_index : InterfaceIndex, 
} 
impl IgmpEnableDisable { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_enable_disable_b1edfb96") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpEnableDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IgmpEnableDisableReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_enable_disable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpProxyDeviceAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub add : u8, 
	pub vrf_id : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl IgmpProxyDeviceAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_proxy_device_add_del_0b9be9ce") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpProxyDeviceAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IgmpProxyDeviceAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_proxy_device_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpProxyDeviceAddDelInterface { 
	pub client_index : u32, 
	pub context : u32, 
	pub add : bool, 
	pub vrf_id : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl IgmpProxyDeviceAddDelInterface { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_proxy_device_add_del_interface_1a9ec24a") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpProxyDeviceAddDelInterfaceReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IgmpProxyDeviceAddDelInterfaceReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_proxy_device_add_del_interface_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl IgmpDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_dump_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub saddr : Ip4Address, 
	pub gaddr : Ip4Address, 
} 
impl IgmpDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_details_52f12a89") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpClearInterface { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl IgmpClearInterface { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_clear_interface_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpClearInterfaceReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IgmpClearInterfaceReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_clear_interface_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantIgmpEvents { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : u32, 
	pub pid : u32, 
} 
impl WantIgmpEvents { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_igmp_events_cfaccc1f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantIgmpEventsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl WantIgmpEventsReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_igmp_events_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpEvent { 
	pub sw_if_index : InterfaceIndex, 
	pub filter : FilterMode, 
	pub saddr : Ip4Address, 
	pub gaddr : Ip4Address, 
} 
impl IgmpEvent { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_event_d7696eaf") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpGroupPrefixSet { 
	pub client_index : u32, 
	pub context : u32, 
	pub gp : GroupPrefix, 
} 
impl IgmpGroupPrefixSet { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_group_prefix_set_d4f20ac5") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpGroupPrefixSetReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl IgmpGroupPrefixSetReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_group_prefix_set_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpGroupPrefixDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl IgmpGroupPrefixDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_group_prefix_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct IgmpGroupPrefixDetails { 
	pub context : u32, 
	pub gp : GroupPrefix, 
} 
impl IgmpGroupPrefixDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("igmp_group_prefix_details_c3b3c526") 
	 } 
} 
