/*
   Autogenerated Data, Do not Edit! 
   Author: @felixfaisal 
*/
#![allow(non_camel_case_types)]
use vpp_macros::Message; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ethernet_types::*; 
use crate::pci_types::*; 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum VirtioFlags { 
	 VIRTIO_API_FLAG_GSO=1, 
	 VIRTIO_API_FLAG_CSUM_OFFLOAD=2, 
	 VIRTIO_API_FLAG_GRO_COALESCE=4, 
	 VIRTIO_API_FLAG_PACKED=8, 
	 VIRTIO_API_FLAG_IN_ORDER=16, 
	 VIRTIO_API_FLAG_BUFFERING=32, 
	 #[serde(other)] 
	 Invalid 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(virtio_pci_create_a9f1370c)] 
pub struct VirtioPciCreate { 
	pub client_index : u32, 
	pub context : u32, 
	pub pci_addr : PciAddress, 
	pub use_random_mac : bool, 
	pub mac_address : MacAddress, 
	pub gso_enabled : bool, 
	pub checksum_offload_enabled : bool, 
	pub features : u64, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(virtio_pci_create_reply_5383d31f)] 
pub struct VirtioPciCreateReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(virtio_pci_create_v2_5d096e1a)] 
pub struct VirtioPciCreateV2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub pci_addr : PciAddress, 
	pub use_random_mac : bool, 
	pub mac_address : MacAddress, 
	pub virtio_flags : VirtioFlags, 
	pub features : u64, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(virtio_pci_create_v2_reply_5383d31f)] 
pub struct VirtioPciCreateV2Reply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(virtio_pci_delete_f9e6675e)] 
pub struct VirtioPciDelete { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(virtio_pci_delete_reply_e8d4e804)] 
pub struct VirtioPciDeleteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(sw_interface_virtio_pci_dump_51077d14)] 
pub struct SwInterfaceVirtioPciDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(sw_interface_virtio_pci_details_16187f3a)] 
pub struct SwInterfaceVirtioPciDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub pci_addr : PciAddress, 
	pub mac_addr : MacAddress, 
	pub tx_ring_sz : u16, 
	pub rx_ring_sz : u16, 
	pub features : u64, 
} 
