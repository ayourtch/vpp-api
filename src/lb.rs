/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::lb_types::*; 
use crate::ip_types::*; 
use crate::interface_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbConf { 
	pub client_index : u32, 
	pub context : u32, 
	pub ip4_src_address : Ip4Address, 
	pub ip6_src_address : Ip6Address, 
	pub sticky_buckets_per_core : u32, 
	pub flow_timeout : u32, 
} 
impl LbConf { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_conf_22ddb739") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbConfReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LbConfReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_conf_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelVip { 
	pub client_index : u32, 
	pub context : u32, 
	pub pfx : AddressWithPrefix, 
	pub protocol : u8, 
	pub port : u16, 
	pub encap : LbEncapType, 
	pub dscp : u8, 
	pub typ : LbSrvType, 
	pub target_port : u16, 
	pub node_port : u16, 
	pub new_flows_table_length : u32, 
	pub is_del : bool, 
} 
impl LbAddDelVip { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_vip_d15b7ddc") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelVipReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LbAddDelVipReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_vip_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelAs { 
	pub client_index : u32, 
	pub context : u32, 
	pub pfx : AddressWithPrefix, 
	pub protocol : u8, 
	pub port : u16, 
	pub as_address : Address, 
	pub is_del : bool, 
	pub is_flush : bool, 
} 
impl LbAddDelAs { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_as_78628987") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelAsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LbAddDelAsReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_as_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbFlushVip { 
	pub client_index : u32, 
	pub context : u32, 
	pub pfx : AddressWithPrefix, 
	pub protocol : u8, 
	pub port : u16, 
} 
impl LbFlushVip { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_flush_vip_1063f819") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbFlushVipReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LbFlushVipReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_flush_vip_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbVipDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub pfx : AddressWithPrefix, 
	pub pfx_matcher : PrefixMatcher, 
	pub protocol : u8, 
	pub port : u16, 
} 
impl LbVipDump { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_vip_dump_c7bcb124") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbVipDetails { 
	pub context : u32, 
	pub vip : LbVip, 
	pub encap : LbEncapType, 
	pub dscp : IpDscp, 
	pub srv_type : LbSrvType, 
	pub target_port : u16, 
	pub flow_table_length : u16, 
} 
impl LbVipDetails { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_vip_details_08f39bed") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAsDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub pfx : AddressWithPrefix, 
	pub protocol : u8, 
	pub port : u16, 
} 
impl LbAsDump { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_as_dump_1063f819") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAsDetails { 
	pub context : u32, 
	pub vip : LbVip, 
	pub app_srv : Address, 
	pub flags : u8, 
	pub in_use_since : u32, 
} 
impl LbAsDetails { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_as_details_9c39f60e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelIntfNat4 { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub sw_if_index : InterfaceIndex, 
} 
impl LbAddDelIntfNat4 { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_intf_nat4_47d6e753") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelIntfNat4Reply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LbAddDelIntfNat4Reply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_intf_nat4_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelIntfNat6 { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub sw_if_index : InterfaceIndex, 
} 
impl LbAddDelIntfNat6 { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_intf_nat6_47d6e753") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LbAddDelIntfNat6Reply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LbAddDelIntfNat6Reply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lb_add_del_intf_nat6_reply_e8d4e804") 
	 } 
} 
