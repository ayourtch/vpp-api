/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ip_types::*; 
use crate::flow_types::*; 
use crate::ethernet_types::*; 
use crate::ip_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub flow : FlowRule, 
} 
impl FlowAdd { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_add_3e5bf1a9") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowAddReply { 
	pub context : u32, 
	pub retval : i32, 
	pub flow_index : u32, 
} 
impl FlowAddReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_add_reply_8587dc85") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub flow_index : u32, 
} 
impl FlowDel { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_del_b6b9b02c") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl FlowDelReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowEnable { 
	pub client_index : u32, 
	pub context : u32, 
	pub flow_index : u32, 
	pub hw_if_index : u32, 
} 
impl FlowEnable { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_enable_2024be69") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowEnableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl FlowEnableReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_enable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub flow_index : u32, 
	pub hw_if_index : u32, 
} 
impl FlowDisable { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_disable_2024be69") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct FlowDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl FlowDisableReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("flow_disable_reply_e8d4e804") 
	 } 
} 
