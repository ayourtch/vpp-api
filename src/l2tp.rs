/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ethernet_types::*; 
use crate::ip_types::*; 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum L2tLookupKey { 
	 L2T_LOOKUP_KEY_API_SRC_ADDR=0, 
	 L2T_LOOKUP_KEY_API_DST_ADDR=1, 
	 L2T_LOOKUP_KEY_API_SESSION_ID=2, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3CreateTunnel { 
	pub client_index : u32, 
	pub context : u32, 
	pub client_address : Address, 
	pub our_address : Address, 
	pub local_session_id : u32, 
	pub remote_session_id : u32, 
	pub local_cookie : u64, 
	pub remote_cookie : u64, 
	pub l2_sublayer_present : bool, 
	pub encap_vrf_id : u32, 
} 
impl L2tpv3CreateTunnel { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_create_tunnel_596892cb") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3CreateTunnelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl L2tpv3CreateTunnelReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_create_tunnel_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3SetTunnelCookies { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub new_local_cookie : u64, 
	pub new_remote_cookie : u64, 
} 
impl L2tpv3SetTunnelCookies { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_set_tunnel_cookies_b3f4faf7") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3SetTunnelCookiesReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2tpv3SetTunnelCookiesReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_set_tunnel_cookies_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwIfL2tpv3TunnelDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub interface_name : FixedSizeString<U64>, 
	pub client_address : Address, 
	pub our_address : Address, 
	pub local_session_id : u32, 
	pub remote_session_id : u32, 
	pub local_cookie : u64, 
	pub remote_cookie : u64, 
	pub l2_sublayer_present : bool, 
} 
impl SwIfL2tpv3TunnelDetails { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("sw_if_l2tpv3_tunnel_details_1dab5c7e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwIfL2tpv3TunnelDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl SwIfL2tpv3TunnelDump { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("sw_if_l2tpv3_tunnel_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3InterfaceEnableDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable_disable : bool, 
	pub sw_if_index : InterfaceIndex, 
} 
impl L2tpv3InterfaceEnableDisable { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_interface_enable_disable_3865946c") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3InterfaceEnableDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2tpv3InterfaceEnableDisableReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_interface_enable_disable_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3SetLookupKey { 
	pub client_index : u32, 
	pub context : u32, 
	pub key : L2tLookupKey, 
} 
impl L2tpv3SetLookupKey { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_set_lookup_key_c9892c86") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2tpv3SetLookupKeyReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2tpv3SetLookupKeyReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("l2tpv3_set_lookup_key_reply_e8d4e804") 
	 } 
} 
