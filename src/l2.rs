/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::ip_types::*; 
use crate::ethernet_types::*; 
use crate::interface_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct MacEntry { 
	pub sw_if_index : InterfaceIndex, 
	pub mac_addr : MacAddress, 
	pub action : MacEventAction, 
	pub flags : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainSwIf { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub shg : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BdIpMac { 
	pub bd_id : u32, 
	pub ip : Address, 
	pub mac : MacAddress, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum MacEventAction { 
	 MAC_EVENT_ACTION_API_ADD=0, 
	 MAC_EVENT_ACTION_API_DELETE=1, 
	 MAC_EVENT_ACTION_API_MOVE=2, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum BdFlags { 
	 BRIDGE_API_FLAG_NONE=0, 
	 BRIDGE_API_FLAG_LEARN=1, 
	 BRIDGE_API_FLAG_FWD=2, 
	 BRIDGE_API_FLAG_FLOOD=4, 
	 BRIDGE_API_FLAG_UU_FLOOD=8, 
	 BRIDGE_API_FLAG_ARP_TERM=16, 
	 BRIDGE_API_FLAG_ARP_UFWD=32, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum L2PortType { 
	 L2_API_PORT_TYPE_NORMAL=0, 
	 L2_API_PORT_TYPE_BVI=1, 
	 L2_API_PORT_TYPE_UU_FWD=2, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2XconnectDetails { 
	pub context : u32, 
	pub rx_sw_if_index : InterfaceIndex, 
	pub tx_sw_if_index : InterfaceIndex, 
} 
impl L2XconnectDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_xconnect_details_c8aa6b37") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2XconnectDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl L2XconnectDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_xconnect_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2FibTableDetails { 
	pub context : u32, 
	pub bd_id : u32, 
	pub mac : MacAddress, 
	pub sw_if_index : InterfaceIndex, 
	pub static_mac : bool, 
	pub filter_mac : bool, 
	pub bvi_mac : bool, 
} 
impl L2FibTableDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_fib_table_details_e8d2fc72") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2FibTableDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
} 
impl L2FibTableDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_fib_table_dump_c25fdce6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2FibClearTable { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl L2FibClearTable { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_fib_clear_table_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2FibClearTableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2FibClearTableReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_fib_clear_table_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibFlushAll { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl L2fibFlushAll { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_flush_all_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibFlushAllReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2fibFlushAllReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_flush_all_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibFlushBd { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
} 
impl L2fibFlushBd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_flush_bd_c25fdce6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibFlushBdReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2fibFlushBdReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_flush_bd_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibFlushInt { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl L2fibFlushInt { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_flush_int_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibFlushIntReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2fibFlushIntReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_flush_int_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub mac : MacAddress, 
	pub bd_id : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_add : bool, 
	pub static_mac : bool, 
	pub filter_mac : bool, 
	pub bvi_mac : bool, 
} 
impl L2fibAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_add_del_f29d796c") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2fibAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantL2MacsEvents { 
	pub client_index : u32, 
	pub context : u32, 
	pub learn_limit : u32, 
	pub scan_delay : u8, 
	pub max_macs_in_event : u8, 
	pub enable_disable : bool, 
	pub pid : u32, 
} 
impl WantL2MacsEvents { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_l2_macs_events_9aabdfde") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantL2MacsEventsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl WantL2MacsEventsReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_l2_macs_events_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantL2MacsEvents2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub max_macs_in_event : u8, 
	pub enable_disable : bool, 
	pub pid : u32, 
} 
impl WantL2MacsEvents2 { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_l2_macs_events2_cc1377b0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantL2MacsEvents2Reply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl WantL2MacsEvents2Reply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_l2_macs_events2_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibSetScanDelay { 
	pub client_index : u32, 
	pub context : u32, 
	pub scan_delay : u16, 
} 
impl L2fibSetScanDelay { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_set_scan_delay_a3b968a4") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2fibSetScanDelayReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2fibSetScanDelayReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2fib_set_scan_delay_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2MacsEvent { 
	pub client_index : u32, 
	pub pid : u32, 
	pub n_macs : u32, 
	pub mac : MacEntry, 
} 
impl L2MacsEvent { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_macs_event_2eadfc8b") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2Flags { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_set : bool, 
	pub feature_bitmap : u32, 
} 
impl L2Flags { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_flags_fc41cfe8") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2FlagsReply { 
	pub context : u32, 
	pub retval : i32, 
	pub resulting_feature_bitmap : u32, 
} 
impl L2FlagsReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_flags_reply_29b2a2b3") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainSetMacAge { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
	pub mac_age : u8, 
} 
impl BridgeDomainSetMacAge { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_set_mac_age_b537ad7b") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainSetMacAgeReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BridgeDomainSetMacAgeReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_set_mac_age_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainSetDefaultLearnLimit { 
	pub client_index : u32, 
	pub context : u32, 
	pub learn_limit : u32, 
} 
impl BridgeDomainSetDefaultLearnLimit { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_set_default_learn_limit_f097ffce") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainSetDefaultLearnLimitReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BridgeDomainSetDefaultLearnLimitReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_set_default_learn_limit_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainSetLearnLimit { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
	pub learn_limit : u32, 
} 
impl BridgeDomainSetLearnLimit { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_set_learn_limit_89c52b5f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainSetLearnLimitReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BridgeDomainSetLearnLimitReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_set_learn_limit_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
	pub flood : bool, 
	pub uu_flood : bool, 
	pub forward : bool, 
	pub learn : bool, 
	pub arp_term : bool, 
	pub arp_ufwd : bool, 
	pub mac_age : u8, 
	pub bd_tag : FixedSizeString<U64>, 
	pub is_add : bool, 
} 
impl BridgeDomainAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_add_del_600b7170") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BridgeDomainAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BridgeDomainDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_dump_74396a43") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeDomainDetails { 
	pub context : u32, 
	pub bd_id : u32, 
	pub flood : bool, 
	pub uu_flood : bool, 
	pub forward : bool, 
	pub learn : bool, 
	pub arp_term : bool, 
	pub arp_ufwd : bool, 
	pub mac_age : u8, 
	pub bd_tag : FixedSizeString<U64>, 
	pub bvi_sw_if_index : InterfaceIndex, 
	pub uu_fwd_sw_if_index : InterfaceIndex, 
	pub n_sw_ifs : u32, 
	pub sw_if_details : BridgeDomainSwIf, 
} 
impl BridgeDomainDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_domain_details_979f549d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeFlags { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
	pub is_set : bool, 
	pub flags : BdFlags, 
} 
impl BridgeFlags { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_flags_1b0c5fbd") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BridgeFlagsReply { 
	pub context : u32, 
	pub retval : i32, 
	pub resulting_feature_bitmap : u32, 
} 
impl BridgeFlagsReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bridge_flags_reply_29b2a2b3") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2InterfaceVlanTagRewrite { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub vtr_op : u32, 
	pub push_dot1q : u32, 
	pub tag1 : u32, 
	pub tag2 : u32, 
} 
impl L2InterfaceVlanTagRewrite { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_interface_vlan_tag_rewrite_62cc0bbc") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2InterfaceVlanTagRewriteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2InterfaceVlanTagRewriteReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_interface_vlan_tag_rewrite_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2InterfacePbbTagRewrite { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub vtr_op : u32, 
	pub outer_tag : u16, 
	pub b_dmac : MacAddress, 
	pub b_smac : MacAddress, 
	pub b_vlanid : u16, 
	pub i_sid : u32, 
} 
impl L2InterfacePbbTagRewrite { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_interface_pbb_tag_rewrite_612efa5a") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2InterfacePbbTagRewriteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2InterfacePbbTagRewriteReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_interface_pbb_tag_rewrite_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2PatchAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub rx_sw_if_index : InterfaceIndex, 
	pub tx_sw_if_index : InterfaceIndex, 
	pub is_add : bool, 
} 
impl L2PatchAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_patch_add_del_522f3445") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2PatchAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2PatchAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_patch_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetL2Xconnect { 
	pub client_index : u32, 
	pub context : u32, 
	pub rx_sw_if_index : InterfaceIndex, 
	pub tx_sw_if_index : InterfaceIndex, 
	pub enable : bool, 
} 
impl SwInterfaceSetL2Xconnect { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_l2_xconnect_1aaa2dbb") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetL2XconnectReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SwInterfaceSetL2XconnectReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_l2_xconnect_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetL2Bridge { 
	pub client_index : u32, 
	pub context : u32, 
	pub rx_sw_if_index : InterfaceIndex, 
	pub bd_id : u32, 
	pub port_type : L2PortType, 
	pub shg : u8, 
	pub enable : bool, 
} 
impl SwInterfaceSetL2Bridge { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_l2_bridge_2e483cd0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetL2BridgeReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SwInterfaceSetL2BridgeReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_l2_bridge_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BdIpMacAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub entry : BdIpMac, 
} 
impl BdIpMacAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bd_ip_mac_add_del_5f2b84e2") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BdIpMacAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BdIpMacAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bd_ip_mac_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BdIpMacFlush { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
} 
impl BdIpMacFlush { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bd_ip_mac_flush_c25fdce6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BdIpMacFlushReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BdIpMacFlushReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bd_ip_mac_flush_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BdIpMacDetails { 
	pub context : u32, 
	pub entry : BdIpMac, 
} 
impl BdIpMacDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bd_ip_mac_details_a52f8044") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BdIpMacDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
} 
impl BdIpMacDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bd_ip_mac_dump_c25fdce6") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2InterfaceEfpFilter { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub enable_disable : bool, 
} 
impl L2InterfaceEfpFilter { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_interface_efp_filter_5501adee") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2InterfaceEfpFilterReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl L2InterfaceEfpFilterReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_interface_efp_filter_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetVpath { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub enable : bool, 
} 
impl SwInterfaceSetVpath { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_vpath_ae6cfcfb") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceSetVpathReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SwInterfaceSetVpathReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_interface_set_vpath_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BviCreate { 
	pub client_index : u32, 
	pub context : u32, 
	pub mac : MacAddress, 
	pub user_instance : u32, 
} 
impl BviCreate { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bvi_create_f5398559") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BviCreateReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BviCreateReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bvi_create_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BviDelete { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl BviDelete { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bvi_delete_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct BviDeleteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl BviDeleteReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("bvi_delete_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantL2ArpTermEvents { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : bool, 
	pub pid : u32, 
} 
impl WantL2ArpTermEvents { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_l2_arp_term_events_3ec6d6c2") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantL2ArpTermEventsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl WantL2ArpTermEventsReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_l2_arp_term_events_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct L2ArpTermEvent { 
	pub client_index : u32, 
	pub pid : u32, 
	pub ip : Address, 
	pub sw_if_index : InterfaceIndex, 
	pub mac : MacAddress, 
} 
impl L2ArpTermEvent { 
	 pub fn get_message_id() -> String { 
	 	 String::from("l2_arp_term_event_85ff71ea") 
	 } 
} 
