/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ethernet_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketCreate { 
	pub client_index : u32, 
	pub context : u32, 
	pub hw_addr : MacAddress, 
	pub use_random_hw_addr : bool, 
	pub host_if_name : FixedSizeString<U64>, 
} 
impl AfPacketCreate { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_create_a190415f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketCreateReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl AfPacketCreateReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_create_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketDelete { 
	pub client_index : u32, 
	pub context : u32, 
	pub host_if_name : FixedSizeString<U64>, 
} 
impl AfPacketDelete { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_delete_863fa648") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketDeleteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl AfPacketDeleteReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_delete_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketSetL4CksumOffload { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub set : bool, 
} 
impl AfPacketSetL4CksumOffload { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_set_l4_cksum_offload_319cd5c8") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketSetL4CksumOffloadReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl AfPacketSetL4CksumOffloadReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_set_l4_cksum_offload_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl AfPacketDump { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct AfPacketDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub host_if_name : FixedSizeString<U64>, 
} 
impl AfPacketDetails { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("af_packet_details_58c7c042") 
	 } 
} 
