/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ethernet_types::*; 
use crate::virtio_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CreateVhostUserIf { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_server : bool, 
	pub sock_filename : FixedSizeString<U256>, 
	pub renumber : bool, 
	pub disable_mrg_rxbuf : bool, 
	pub disable_indirect_desc : bool, 
	pub enable_gso : bool, 
	pub enable_packed : bool, 
	pub custom_dev_instance : u32, 
	pub use_custom_mac : bool, 
	pub mac_address : MacAddress, 
	pub tag : FixedSizeString<U64>, 
} 
impl CreateVhostUserIf { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("create_vhost_user_if_c785c6fc") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CreateVhostUserIfReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl CreateVhostUserIfReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("create_vhost_user_if_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ModifyVhostUserIf { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_server : bool, 
	pub sock_filename : FixedSizeString<U256>, 
	pub renumber : bool, 
	pub enable_gso : bool, 
	pub enable_packed : bool, 
	pub custom_dev_instance : u32, 
} 
impl ModifyVhostUserIf { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("modify_vhost_user_if_0e71d40b") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ModifyVhostUserIfReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl ModifyVhostUserIfReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("modify_vhost_user_if_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CreateVhostUserIfV2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_server : bool, 
	pub sock_filename : FixedSizeString<U256>, 
	pub renumber : bool, 
	pub disable_mrg_rxbuf : bool, 
	pub disable_indirect_desc : bool, 
	pub enable_gso : bool, 
	pub enable_packed : bool, 
	pub enable_event_idx : bool, 
	pub custom_dev_instance : u32, 
	pub use_custom_mac : bool, 
	pub mac_address : MacAddress, 
	pub tag : FixedSizeString<U64>, 
} 
impl CreateVhostUserIfV2 { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("create_vhost_user_if_v2_dba1cc1d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CreateVhostUserIfV2Reply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl CreateVhostUserIfV2Reply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("create_vhost_user_if_v2_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ModifyVhostUserIfV2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_server : bool, 
	pub sock_filename : FixedSizeString<U256>, 
	pub renumber : bool, 
	pub enable_gso : bool, 
	pub enable_packed : bool, 
	pub enable_event_idx : bool, 
	pub custom_dev_instance : u32, 
} 
impl ModifyVhostUserIfV2 { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("modify_vhost_user_if_v2_b2483771") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct ModifyVhostUserIfV2Reply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl ModifyVhostUserIfV2Reply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("modify_vhost_user_if_v2_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct DeleteVhostUserIf { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl DeleteVhostUserIf { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("delete_vhost_user_if_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct DeleteVhostUserIfReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl DeleteVhostUserIfReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("delete_vhost_user_if_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceVhostUserDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub interface_name : FixedSizeString<U64>, 
	pub virtio_net_hdr_sz : u32, 
	pub features_first_32 : VirtioNetFeaturesFirst32, 
	pub features_last_32 : VirtioNetFeaturesLast32, 
	pub is_server : bool, 
	pub sock_filename : FixedSizeString<U256>, 
	pub num_regions : u32, 
	pub sock_errno : i32, 
} 
impl SwInterfaceVhostUserDetails { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("sw_interface_vhost_user_details_98530df1") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwInterfaceVhostUserDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl SwInterfaceVhostUserDump { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("sw_interface_vhost_user_dump_f9e6675e") 
	 } 
} 
