/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ip_types::*; 
use crate::ethernet_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrKey { 
	pub sw_if_index : InterfaceIndex, 
	pub vr_id : u8, 
	pub is_ipv6 : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrConf { 
	pub sw_if_index : InterfaceIndex, 
	pub vr_id : u8, 
	pub priority : u8, 
	pub interval : u16, 
	pub flags : VrrpVrFlags, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrTracking { 
	pub interfaces_dec : u32, 
	pub priority : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrRuntime { 
	pub state : VrrpVrState, 
	pub master_adv_int : u16, 
	pub skew : u16, 
	pub master_down_int : u16, 
	pub mac : MacAddress, 
	pub tracking : VrrpVrTracking, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrTrackIf { 
	pub sw_if_index : InterfaceIndex, 
	pub priority : u8, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum VrrpVrFlags { 
	 VRRP_API_VR_PREEMPT=1, 
	 VRRP_API_VR_ACCEPT=2, 
	 VRRP_API_VR_UNICAST=4, 
	 VRRP_API_VR_IPV6=8, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum VrrpVrState { 
	 VRRP_API_VR_STATE_INIT=0, 
	 VRRP_API_VR_STATE_BACKUP=1, 
	 VRRP_API_VR_STATE_MASTER=2, 
	 VRRP_API_VR_STATE_INTF_DOWN=3, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : u8, 
	pub sw_if_index : InterfaceIndex, 
	pub vr_id : u8, 
	pub priority : u8, 
	pub interval : u16, 
	pub flags : VrrpVrFlags, 
	pub n_addrs : u8, 
	pub addrs : Address, 
} 
impl VrrpVrAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_add_del_6dc4b881") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl VrrpVrAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl VrrpVrDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_dump_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrDetails { 
	pub context : u32, 
	pub config : VrrpVrConf, 
	pub runtime : VrrpVrRuntime, 
	pub n_addrs : u8, 
	pub addrs : Address, 
} 
impl VrrpVrDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_details_0412fa71") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrStartStop { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub vr_id : u8, 
	pub is_ipv6 : u8, 
	pub is_start : u8, 
} 
impl VrrpVrStartStop { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_start_stop_0662a3b7") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrStartStopReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl VrrpVrStartStopReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_start_stop_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrSetPeers { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub vr_id : u8, 
	pub is_ipv6 : u8, 
	pub n_addrs : u8, 
	pub addrs : Address, 
} 
impl VrrpVrSetPeers { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_set_peers_baa2e52b") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrSetPeersReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl VrrpVrSetPeersReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_set_peers_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrPeerDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : u8, 
	pub vr_id : u8, 
} 
impl VrrpVrPeerDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_peer_dump_6fa3f7c4") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrPeerDetails { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub vr_id : u8, 
	pub is_ipv6 : u8, 
	pub n_peer_addrs : u8, 
	pub peer_addrs : Address, 
} 
impl VrrpVrPeerDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_peer_details_abd9145e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrTrackIfAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : u8, 
	pub vr_id : u8, 
	pub is_add : u8, 
	pub n_ifs : u8, 
	pub ifs : VrrpVrTrackIf, 
} 
impl VrrpVrTrackIfAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_track_if_add_del_337f4ba4") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrTrackIfAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl VrrpVrTrackIfAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_track_if_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrTrackIfDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : u8, 
	pub vr_id : u8, 
	pub dump_all : u8, 
} 
impl VrrpVrTrackIfDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_track_if_dump_a34dfc6d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrTrackIfDetails { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub vr_id : u8, 
	pub is_ipv6 : u8, 
	pub n_ifs : u8, 
	pub ifs : VrrpVrTrackIf, 
} 
impl VrrpVrTrackIfDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_track_if_details_99bcca9c") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct VrrpVrEvent { 
	pub client_index : u32, 
	pub pid : u32, 
	pub vr : VrrpVrKey, 
	pub old_state : VrrpVrState, 
	pub new_state : VrrpVrState, 
} 
impl VrrpVrEvent { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vrrp_vr_event_c1fea6a5") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantVrrpVrEvents { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable_disable : bool, 
	pub pid : u32, 
} 
impl WantVrrpVrEvents { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_vrrp_vr_events_c5e2af94") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct WantVrrpVrEventsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl WantVrrpVrEventsReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("want_vrrp_vr_events_reply_e8d4e804") 
	 } 
} 
