/*
   Autogenerated Data, Do not Edit! 
   Author: @felixfaisal 
*/
#![allow(non_camel_case_types)]
use vpp_macros::Message; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::ip_types::*; 
use crate::interface_types::*; 
// Implementation for teib_entry 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TeibEntry { 
	pub sw_if_index : InterfaceIndex, 
	pub peer : Address, 
	pub nh : Address, 
	pub nh_table_id : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(teib_entry_add_del_5aa0a538)] 
pub struct TeibEntryAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : u8, 
	pub entry : TeibEntry, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(teib_entry_add_del_reply_e8d4e804)] 
pub struct TeibEntryAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(teib_dump_51077d14)] 
pub struct TeibDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(teib_details_e3b6a503)] 
pub struct TeibDetails { 
	pub context : u32, 
	pub entry : TeibEntry, 
} 
