/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum TraceFilterFlag { 
	 TRACE_FF_NONE=0, 
	 TRACE_FF_INCLUDE_NODE=1, 
	 TRACE_FF_EXCLUDE_NODE=2, 
	 TRACE_FF_INCLUDE_CLASSIFIER=3, 
	 TRACE_FF_EXCLUDE_CLASSIFIER=4, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceSetFilters { 
	pub client_index : u32, 
	pub context : u32, 
	pub flag : TraceFilterFlag, 
	pub count : u32, 
	pub node_index : u32, 
	pub classifier_table_index : u32, 
} 
impl TraceSetFilters { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_set_filters_f522b44a") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceSetFiltersReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl TraceSetFiltersReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_set_filters_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceCapturePackets { 
	pub client_index : u32, 
	pub context : u32, 
	pub node_index : u32, 
	pub max_packets : u32, 
	pub use_filter : bool, 
	pub verbose : bool, 
	pub pre_capture_clear : bool, 
} 
impl TraceCapturePackets { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_capture_packets_9e791a9b") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceCapturePacketsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl TraceCapturePacketsReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_capture_packets_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceClearCapture { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl TraceClearCapture { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_clear_capture_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceClearCaptureReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl TraceClearCaptureReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_clear_capture_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub clear_cache : u8, 
	pub thread_id : u32, 
	pub position : u32, 
	pub max_records : u32, 
} 
impl TraceDump { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_dump_c7d6681f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceDumpReply { 
	pub context : u32, 
	pub retval : i32, 
	pub last_thread_id : u32, 
	pub last_position : u32, 
	pub more_this_thread : u8, 
	pub more_threads : u8, 
	pub flush_only : u8, 
	pub done : u8, 
} 
impl TraceDumpReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_dump_reply_e0e87f9d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct TraceDetails { 
	pub client_index : u32, 
	pub context : u32, 
	pub thread_id : u32, 
	pub position : u32, 
	pub more_this_thread : u8, 
	pub more_threads : u8, 
	pub done : u8, 
	pub packet_number : u32, 
	pub trace_data : VariableSizeString, 
} 
impl TraceDetails { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("trace_details_1553e9eb") 
	 } 
} 
