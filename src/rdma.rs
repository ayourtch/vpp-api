/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum RdmaMode { 
	 RDMA_API_MODE_AUTO=0, 
	 RDMA_API_MODE_IBV=1, 
	 RDMA_API_MODE_DV=2, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct RdmaCreate { 
	pub client_index : u32, 
	pub context : u32, 
	pub host_if : FixedSizeString<U64>, 
	pub name : FixedSizeString<U64>, 
	pub rxq_num : u16, 
	pub rxq_size : u16, 
	pub txq_size : u16, 
	pub mode : RdmaMode, 
} 
impl RdmaCreate { 
	 pub fn get_message_id() -> String { 
	 	 String::from("rdma_create_076fe418") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct RdmaCreateV2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub host_if : FixedSizeString<U64>, 
	pub name : FixedSizeString<U64>, 
	pub rxq_num : u16, 
	pub rxq_size : u16, 
	pub txq_size : u16, 
	pub mode : RdmaMode, 
	pub no_multi_seg : bool, 
	pub max_pktlen : u16, 
} 
impl RdmaCreateV2 { 
	 pub fn get_message_id() -> String { 
	 	 String::from("rdma_create_v2_5826a4f3") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct RdmaCreateReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl RdmaCreateReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("rdma_create_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct RdmaCreateV2Reply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl RdmaCreateV2Reply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("rdma_create_v2_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct RdmaDelete { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl RdmaDelete { 
	 pub fn get_message_id() -> String { 
	 	 String::from("rdma_delete_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct RdmaDeleteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl RdmaDeleteReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("rdma_delete_reply_e8d4e804") 
	 } 
} 
