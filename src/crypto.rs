/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum CryptoDispatchMode { 
	 CRYPTO_ASYNC_DISPATCH_POLLING=0, 
	 CRYPTO_ASYNC_DISPATCH_INTERRUPT=1, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum CryptoOpClassType { 
	 CRYPTO_API_OP_SIMPLE=0, 
	 CRYPTO_API_OP_CHAINED=1, 
	 CRYPTO_API_OP_BOTH=2, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CryptoSetAsyncDispatch { 
	pub client_index : u32, 
	pub context : u32, 
	pub mode : CryptoDispatchMode, 
} 
impl CryptoSetAsyncDispatch { 
	 pub fn get_message_id() -> String { 
	 	 String::from("crypto_set_async_dispatch_5ca4adc0") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CryptoSetAsyncDispatchReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl CryptoSetAsyncDispatchReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("crypto_set_async_dispatch_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CryptoSetHandler { 
	pub client_index : u32, 
	pub context : u32, 
	pub alg_name : FixedSizeString<U32>, 
	pub engine : FixedSizeString<U16>, 
	pub oct : CryptoOpClassType, 
	pub is_async : u8, 
} 
impl CryptoSetHandler { 
	 pub fn get_message_id() -> String { 
	 	 String::from("crypto_set_handler_ce9ad00d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct CryptoSetHandlerReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl CryptoSetHandlerReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("crypto_set_handler_reply_e8d4e804") 
	 } 
} 
