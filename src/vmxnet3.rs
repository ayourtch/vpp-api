/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ethernet_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3TxList { 
	pub tx_qsize : u16, 
	pub tx_next : u16, 
	pub tx_produce : u16, 
	pub tx_consume : u16, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3RxList { 
	pub rx_qsize : u16, 
	pub rx_fill : u16, 
	pub rx_next : u16, 
	pub rx_produce : u16, 
	pub rx_consume : u16, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3Create { 
	pub client_index : u32, 
	pub context : u32, 
	pub pci_addr : u32, 
	pub enable_elog : i32, 
	pub rxq_size : u16, 
	pub rxq_num : u16, 
	pub txq_size : u16, 
	pub txq_num : u16, 
	pub bind : u8, 
	pub enable_gso : bool, 
} 
impl Vmxnet3Create { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vmxnet3_create_71a07314") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3CreateReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl Vmxnet3CreateReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vmxnet3_create_reply_5383d31f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3Delete { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl Vmxnet3Delete { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vmxnet3_delete_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3DeleteReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl Vmxnet3DeleteReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vmxnet3_delete_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3Details { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub if_name : FixedSizeString<U64>, 
	pub hw_addr : MacAddress, 
	pub pci_addr : u32, 
	pub version : u8, 
	pub admin_up_down : bool, 
	pub rx_count : u8, 
	pub rx_list : Vmxnet3RxList, 
	pub tx_count : u8, 
	pub tx_list : Vmxnet3TxList, 
} 
impl Vmxnet3Details { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vmxnet3_details_829ba055") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct Vmxnet3Dump { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl Vmxnet3Dump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("vmxnet3_dump_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwVmxnet3InterfaceDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
impl SwVmxnet3InterfaceDump { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_vmxnet3_interface_dump_f9e6675e") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SwVmxnet3InterfaceDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub if_name : FixedSizeString<U64>, 
	pub hw_addr : MacAddress, 
	pub pci_addr : u32, 
	pub version : u8, 
	pub admin_up_down : bool, 
	pub rx_count : u8, 
	pub rx_list : Vmxnet3RxList, 
	pub tx_count : u8, 
	pub tx_list : Vmxnet3TxList, 
} 
impl SwVmxnet3InterfaceDetails { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sw_vmxnet3_interface_details_6a1a5498") 
	 } 
} 
