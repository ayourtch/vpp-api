/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
use crate::ip_types::*; 
use crate::sr_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub bsid : u32, 
	pub weight : u32, 
	pub is_spray : bool, 
	pub n_segments : u8, 
	pub segments : u32, 
} 
impl SrMplsPolicyAdd { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_add_a1a70c70") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyAddReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SrMplsPolicyAddReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_add_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyMod { 
	pub client_index : u32, 
	pub context : u32, 
	pub bsid : u32, 
	pub operation : SrPolicyOp, 
	pub sl_index : u32, 
	pub weight : u32, 
	pub n_segments : u8, 
	pub segments : u32, 
} 
impl SrMplsPolicyMod { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_mod_88482c17") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyModReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SrMplsPolicyModReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_mod_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub bsid : u32, 
} 
impl SrMplsPolicyDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_del_e29d34fa") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SrMplsPolicyDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsSteeringAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_del : bool, 
	pub bsid : u32, 
	pub table_id : u32, 
	pub prefix : Prefix, 
	pub mask_width : u32, 
	pub next_hop : Address, 
	pub color : u32, 
	pub co_bits : u8, 
	pub vpn_label : u32, 
} 
impl SrMplsSteeringAddDel { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_steering_add_del_7d1b0a0b") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsSteeringAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SrMplsSteeringAddDelReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_steering_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyAssignEndpointColor { 
	pub client_index : u32, 
	pub context : u32, 
	pub bsid : u32, 
	pub endpoint : Address, 
	pub color : u32, 
} 
impl SrMplsPolicyAssignEndpointColor { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_assign_endpoint_color_5e1c5c13") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct SrMplsPolicyAssignEndpointColorReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl SrMplsPolicyAssignEndpointColorReply { 
	 pub fn get_message_id() -> String { 
	 	 String::from("sr_mpls_policy_assign_endpoint_color_reply_e8d4e804") 
	 } 
} 
