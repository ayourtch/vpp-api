/*
   Autogenerated Data, Do not Edit! 
   Author: @felixfaisal 
*/
#![allow(non_camel_case_types)]
use vpp_macros::Message; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::ip_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_ping_add_del_c692b188)] 
pub struct UdpPingAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub src_ip_address : Address, 
	pub dst_ip_address : Address, 
	pub start_src_port : u16, 
	pub end_src_port : u16, 
	pub start_dst_port : u16, 
	pub end_dst_port : u16, 
	pub interval : u16, 
	pub dis : u8, 
	pub fault_det : u8, 
	pub reserve : u8, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_ping_add_del_reply_e8d4e804)] 
pub struct UdpPingAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_ping_export_b3e225d2)] 
pub struct UdpPingExport { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_ping_export_reply_e8d4e804)] 
pub struct UdpPingExportReply { 
	pub context : u32, 
	pub retval : i32, 
} 
