/* Autogenerated data. Do not edit */
#![allow(non_camel_case_types)]
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::interface_types::*; 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u8)]
pub enum LcpItfHostType { 
	 LCP_API_ITF_HOST_TAP=0, 
	 LCP_API_ITF_HOST_TUN=1, 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpDefaultNsSet { 
	pub client_index : u32, 
	pub context : u32, 
	pub namespace : FixedSizeString<U32>, 
} 
impl LcpDefaultNsSet { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_default_ns_set_b561a74a") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpDefaultNsSetReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LcpDefaultNsSetReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_default_ns_set_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpDefaultNsGet { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl LcpDefaultNsGet { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_default_ns_get_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpDefaultNsGetReply { 
	pub context : u32, 
	pub namespace : FixedSizeString<U32>, 
} 
impl LcpDefaultNsGetReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_default_ns_get_reply_eaeef6d3") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub sw_if_index : InterfaceIndex, 
	pub host_if_name : FixedSizeString<U16>, 
	pub host_if_type : LcpItfHostType, 
	pub namespace : FixedSizeString<U32>, 
} 
impl LcpItfPairAddDel { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_add_del_f3157f59") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LcpItfPairAddDelReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_add_del_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairGet { 
	pub client_index : u32, 
	pub context : u32, 
	pub cursor : u32, 
} 
impl LcpItfPairGet { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_get_f75ba505") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairGetReply { 
	pub context : u32, 
	pub retval : i32, 
	pub cursor : u32, 
} 
impl LcpItfPairGetReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_get_reply_53b48f5d") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairDetails { 
	pub context : u32, 
	pub phy_sw_if_index : InterfaceIndex, 
	pub host_sw_if_index : InterfaceIndex, 
	pub vif_index : u32, 
	pub host_if_name : FixedSizeString<U16>, 
	pub host_if_type : LcpItfHostType, 
	pub namespace : FixedSizeString<U32>, 
} 
impl LcpItfPairDetails { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_details_5a95842f") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairReplaceBegin { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl LcpItfPairReplaceBegin { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_replace_begin_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairReplaceBeginReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LcpItfPairReplaceBeginReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_replace_begin_reply_e8d4e804") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairReplaceEnd { 
	pub client_index : u32, 
	pub context : u32, 
} 
impl LcpItfPairReplaceEnd { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_replace_end_51077d14") 
	 } 
} 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct LcpItfPairReplaceEndReply { 
	pub context : u32, 
	pub retval : i32, 
} 
impl LcpItfPairReplaceEndReply { 
	 pub fn get_message_name_and_crc() -> String { 
	 	 String::from("lcp_itf_pair_replace_end_reply_e8d4e804") 
	 } 
} 
