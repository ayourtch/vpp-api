/*
   Autogenerated Data, Do not Edit! 
   Author: @felixfaisal 
*/
#![allow(non_camel_case_types)]
use vpp_macros::Message; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_transport::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum::{U10, U24, U256, U32, U64};
use crate::ip_types::*; 
// Implementation for udp_encap 
#[derive(Debug, Clone, Serialize, Deserialize)] 
pub struct UdpEncap { 
	pub table_id : u32, 
	pub src_port : u16, 
	pub dst_port : u16, 
	pub src_ip : Address, 
	pub dst_ip : Address, 
	pub id : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_encap_add_61d5fc48)] 
pub struct UdpEncapAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub udp_encap : UdpEncap, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_encap_add_reply_e2fc8294)] 
pub struct UdpEncapAddReply { 
	pub context : u32, 
	pub retval : i32, 
	pub id : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_encap_del_3a91bde5)] 
pub struct UdpEncapDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub id : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_encap_del_reply_e8d4e804)] 
pub struct UdpEncapDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_encap_dump_51077d14)] 
pub struct UdpEncapDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Message)] 
#[message_name_and_crc(udp_encap_details_87c82821)] 
pub struct UdpEncapDetails { 
	pub context : u32, 
	pub udp_encap : UdpEncap, 
} 
